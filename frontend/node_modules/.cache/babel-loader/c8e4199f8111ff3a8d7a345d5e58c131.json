{"ast":null,"code":"var _jsxFileName = \"E:\\\\Laksura_Project\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listOrders } from '../actions/orderActions';\nimport { SearchResults } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderListScreen({\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: 'green',\n        marginBottom: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DELIVERED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.filter(val => {\n          if (searchTerm == \"\") {\n            return val;\n          } else if (val._id.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return val;\n          }\n        }).map((val, key) => {\n          {\n            val._id;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderListScreen, \"kayNJntOZIlgndZaBDODmECG6/8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderListScreen;\nexport default OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/screens/OrderListScreen.js"],"names":["React","useState","useEffect","LinkContainer","Table","Button","useDispatch","useSelector","Loader","Message","listOrders","SearchResults","OrderListScreen","history","dispatch","orderList","state","loading","error","orders","userLogin","userInfo","isAdmin","push","searchTerm","setSearchTerm","textAlign","color","marginBottom","event","target","value","filter","val","_id","toLowerCase","includes","map","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { SearchResults } from 'semantic-ui-react'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'green', marginBottom:40}}><b>Orders</b></h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"search\"\r\n                onChange = {(event) => {\r\n                    setSearchTerm(event.target.value)\r\n                }}/>\r\n\r\n\r\n            {loading ? <Loader />\r\n            : error\r\n            ? (<Message variant='danger'>{error}</Message>)\r\n                    : \r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th>Invoice</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                \r\n                {orders.filter((val) => {\r\n                    if(searchTerm == \"\") {\r\n                        return val\r\n                    } else if (val._id.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return val\r\n                    }\r\n                }). map((val, key) => {\r\n                    {val._id}\r\n                })}\r\n                                {/* {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n                                      \r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))} */}\r\n                            </tbody>\r\n                        </Table>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen"]},"metadata":{},"sourceType":"module"}