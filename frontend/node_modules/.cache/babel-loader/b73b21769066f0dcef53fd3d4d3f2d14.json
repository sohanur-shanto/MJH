{"ast":null,"code":"var _jsxFileName = \"E:\\\\Laksura_Project\\\\frontend\\\\src\\\\screens\\\\ConfirmOrderScreen.js\";\n// import React, {useState, useEffect} from 'react'\n// import { Link } from 'react-router-dom'\n// import { Form, Button, Row, Col } from 'react-bootstrap'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import { useDispatch, useSelector } from 'react-redux'\n// import FormContainer from '../components/FormContainer'\n// import {confirm} from '../actions/orderActions'\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConfirmOrderScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      comment: ''\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  }\n\n  submitForm() {\n    fetch('http://127.0.0.1:8000/api/orders/confirm', {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(data => console.log(data));\n    this.setState({\n      comment: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.comment,\n              name: \"comment\",\n              onChaneg: this.changeHandler,\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              onClick: this.submitForm,\n              className: \"btn btn-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } //     const [comment, setComment] = useState('')\n  //     const [message, setMessage] = useState('')\n  //     const dispatch = useDispatch()\n  //     const redirect = location.search ? location.search.split('=')[1] : '/'\n  //     const orderConfirm = useSelector(state => state.orderConfirm)\n  //     const { error, loading, confirm, userInfo } = orderConfirm\n  //     useEffect(() => {\n  //             if (userInfo){\n  //                 history.push(redirect)\n  //             }            \n  //             }, [history, userInfo, redirect])\n  //     const submitHandler = (e) => {\n  //         e.preventDefault()\n  //         dispatch(confirm(comment))\n  //     }\n  //     return (\n  //         <FormContainer>\n  //             <h3>Add Comment</h3>\n  //             {message && <Message variant='danger'>{message}</Message>}\n  //             {error && <Message variant='warning'>{error}</Message>}\n  //             {loading && <Loader />}\n  //             <hr />\n  //             <Form onSubmit={submitHandler}>\n  //                 <Form.Group controlId='comment'>\n  //                         <Form.Label><strong style={{marginRight: 10}}>Comment </strong><i class=\"fas fa-user\"></i> </Form.Label>\n  //                         <Form.Control\n  //                             required\n  //                             type='comment'\n  //                             // placeholder='Enter Name'\n  //                             value={comment}\n  //                             onChange={(e) => setComment(e.target.value)}\n  //                         >\n  //                         </Form.Control>\n  //                 </Form.Group>\n  //                     <Button type='submit'  bg=\"dark\">Submit</Button>\n  //                     <br />\n  //                 </Form>         \n  //         </FormContainer>\n  //     )\n\n\n}\n\nexport default ConfirmOrderScreen;","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/screens/ConfirmOrderScreen.js"],"names":["React","ConfirmOrderScreen","Component","constructor","state","comment","changeHandler","bind","submitForm","event","setState","target","name","value","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","data","render"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,kBAAN,SAAiCD,KAAK,CAACE,SAAvC,CAAiD;AAC7CC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,aAAL,GAAmB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAnB;AACA,SAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAhB;AACH;;AAEDD,EAAAA,aAAa,CAACG,KAAD,EAAO;AAChB,SAAKC,QAAL,CAAc;AACV,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,KAAd;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACH;;AAEDI,EAAAA,UAAU,GAAE;AACRQ,IAAAA,KAAK,CAAC,0CAAD,EAA4C;AAC7CC,MAAAA,MAAM,EAAC,MADsC;AAE7CC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe,KAAKhB,KAApB,CAFwC;AAG7CiB,MAAAA,OAAO,EAAC;AACJ,wBAAgB;AADZ;AAHqC,KAA5C,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAPhB,EAQCF,IARD,CAQOG,IAAD,IAAQX,OAAO,CAACC,GAAR,CAAYU,IAAZ,CARd;AAUA,SAAKf,QAAL,CAAc;AACVL,MAAAA,OAAO,EAAC;AADE,KAAd;AAGH;;AAEDqB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA,6BACM;AAAA,gCACF;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI;AAAO,cAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,OAAzB;AAAkC,cAAA,IAAI,EAAC,SAAvC;AAAiD,cAAA,QAAQ,EAAE,KAAKC,aAAhE;AAA+E,cAAA,IAAI,EAAC,MAApF;AAA2F,cAAA,SAAS,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eASF;AAAA,iCACQ;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,OAAO,EAAE,KAAKE,UAAnC;AAA+C,cAAA,SAAS,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,gBATE;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH,GAtD4C,CAwDjD;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAzGiD;;AA4GjD,eAAeP,kBAAf","sourcesContent":["// import React, {useState, useEffect} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import { Form, Button, Row, Col } from 'react-bootstrap'\r\n// import Loader from '../components/Loader'\r\n// import Message from '../components/Message'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import FormContainer from '../components/FormContainer'\r\n// import {confirm} from '../actions/orderActions'\r\nimport React from 'react'\r\n\r\nclass ConfirmOrderScreen extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            comment: '',\r\n        }\r\n        this.changeHandler=this.changeHandler.bind(this);\r\n        this.submitForm=this.submitForm.bind(this);\r\n    }\r\n\r\n    changeHandler(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    submitForm(){\r\n        fetch('http://127.0.0.1:8000/api/orders/confirm',{\r\n            method:'POST',\r\n            body:JSON.stringify(this.state),\r\n            headers:{\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n        .then(response=>response.json())\r\n        .then((data)=>console.log(data));\r\n\r\n        this.setState({\r\n            comment:'',\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <table className=\"table table-bordered\">\r\n                  <tbody>\r\n                <tr>\r\n                    <th>\r\n                        Comment\r\n                    </th>\r\n                    <td>\r\n                        <input value={this.state.comment} name=\"comment\" onChaneg={this.changeHandler} type=\"text\" className=\"form-control\"/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                        <td colSpan=\"2\">\r\n                            <input type=\"submit\" onClick={this.submitForm} className=\"btn btn-dark\" />\r\n                        </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n\r\n    }\r\n\r\n//     const [comment, setComment] = useState('')\r\n\r\n//     const [message, setMessage] = useState('')\r\n\r\n//     const dispatch = useDispatch()\r\n\r\n//     const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n//     const orderConfirm = useSelector(state => state.orderConfirm)\r\n\r\n//     const { error, loading, confirm, userInfo } = orderConfirm\r\n\r\n//     useEffect(() => {\r\n//             if (userInfo){\r\n//                 history.push(redirect)\r\n//             }            \r\n//             }, [history, userInfo, redirect])\r\n\r\n\r\n//     const submitHandler = (e) => {\r\n//         e.preventDefault()\r\n//         dispatch(confirm(comment))\r\n//     }\r\n\r\n//     return (\r\n//         <FormContainer>\r\n//             <h3>Add Comment</h3>\r\n//             {message && <Message variant='danger'>{message}</Message>}\r\n//             {error && <Message variant='warning'>{error}</Message>}\r\n//             {loading && <Loader />}\r\n//             <hr />\r\n//             <Form onSubmit={submitHandler}>\r\n\r\n//                 <Form.Group controlId='comment'>\r\n//                         <Form.Label><strong style={{marginRight: 10}}>Comment </strong><i class=\"fas fa-user\"></i> </Form.Label>\r\n//                         <Form.Control\r\n//                             required\r\n//                             type='comment'\r\n//                             // placeholder='Enter Name'\r\n//                             value={comment}\r\n//                             onChange={(e) => setComment(e.target.value)}\r\n//                         >\r\n//                         </Form.Control>\r\n//                 </Form.Group>\r\n\r\n//                     <Button type='submit'  bg=\"dark\">Submit</Button>\r\n//                     <br />\r\n//                 </Form>         \r\n//         </FormContainer>\r\n//     )\r\n}\r\n\r\nexport default ConfirmOrderScreen\r\n"]},"metadata":{},"sourceType":"module"}