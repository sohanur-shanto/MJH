{"ast":null,"code":"\"use strict\";\n\nvar root_1 = require('../util/root');\n\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\n\nexports.$$rxSubscriber = exports.rxSubscriber;","map":{"version":3,"sources":["../../src/symbol/rxSubscriber.ts"],"names":[],"mappings":";;AAAA,IAAA,MAAA,GAAA,OAAA,CAAqB,cAArB,CAAA;;AAEA,IAAM,MAAM,GAAQ,MAAA,CAAA,IAAA,CAAK,MAAzB;AAEa,OAAA,CAAA,YAAA,GAAgB,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,MAAM,CAAC,GAAd,KAAsB,UAAvD,GAC1B,MAAM,CAAC,GAAP,CAAW,cAAX,CAD0B,GACG,gBADlB;AAGb;;AAEG;;AACU,OAAA,CAAA,cAAA,GAAiB,OAAA,CAAA,YAAjB","sourcesContent":["import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}