{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { \r\n\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n } from '../constants/userConstants'\r\n\r\n\r\n\r\n export const login = (email, password) => async (dispatch) => {\r\n     try{\r\n         \r\n        dispatch({\r\n             type: USER_LOGIN_REQUEST\r\n         }) \r\n\r\n         \r\n        const config = {\r\n             headers: {\r\n                 'Content-type': 'application/json'\r\n             }\r\n         }\r\n\r\n        const {data} = await axios.post(\r\n             '/api/users/login/',\r\n             { 'username': email, 'password': password },\r\n             config\r\n\r\n            )\r\n            \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n     }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n     }\r\n }\r\n\r\n\r\n\r\n export const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n }\r\n\r\n\r\n\r\n\r\n export const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        \r\n       dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        }) \r\n\r\n        \r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n       const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n           )\r\n           \r\n       dispatch({\r\n           type: USER_REGISTER_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n       dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n       localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_REGISTER_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        \r\n       dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        }) \r\n\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n           )\r\n\r\n           \r\n       dispatch({\r\n           type: USER_DETAILS_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_DETAILS_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        }) \r\n\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n           )\r\n           \r\n       dispatch({\r\n           type: USER_UPDATE_PROFILE_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n       dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    \r\n    }catch(error){\r\n       dispatch({\r\n           type: USER_UPDATE_PROFILE_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}