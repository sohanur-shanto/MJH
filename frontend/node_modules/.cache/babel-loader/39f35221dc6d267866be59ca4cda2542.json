{"ast":null,"code":"var _jsxFileName = \"E:\\\\Laksura_Project\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listOrders } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderListScreen({\n  history\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  {\n    loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex flex-wrap\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 53\n        }, this)\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex flex-wrap\",\n      children: orders.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        children: orderList._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this) //     <Table striped bordered hover responsive className='table-sm'>\n    //         <thead>\n    //             <tr>\n    //                 <th>ID</th>\n    //                 <th>USER</th>\n    //                 <th>DATE</th>\n    //                 <th>Total</th>\n    //                 <th>PAID</th>\n    //                 <th>DELIVERED</th>\n    //                 <th></th>\n    //             </tr>\n    //         </thead>\n    //         <tbody>\n    //             {orders.map(order => (\n    //                 <tr key={order._id}>\n    //                     <td>{order._id}</td>\n    //                     <td>{order.user && order.user.name}</td>\n    //                     <td>{order.createdAt.substring(0, 10)}</td>\n    //                     <td>${order.totalPrice}</td>\n    //                     <td>{order.isPaid ? (\n    //                         order.paidAt.substring(0, 10)\n    //                     ) : (\n    //                             <i className='fas fa-check' style={{ color: 'red' }}></i>\n    //                         )}\n    //                     </td>\n    //                     <td>{order.isDelivered ? (\n    //                         order.deliveredAt.substring(0, 10)\n    //                     ) : (\n    //                             <i className='fas fa-check' style={{ color: 'red' }}></i>\n    //                         )}\n    //                     </td>\n    //                     <td>\n    //                         <LinkContainer to={`/order/${order._id}`}>\n    //                             <Button variant='light' className='btn-sm'>\n    //                                 Details\n    //                             </Button>\n    //                         </LinkContainer>\n    //                     </td>\n    //                 </tr>\n    //             ))}\n    //         </tbody>\n    //     </Table>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderListScreen, \"T22Ya5guJBYtT2WBadWLHdx/0BQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderListScreen;\nexport default OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/screens/OrderListScreen.js"],"names":["React","useState","useEffect","LinkContainer","Table","Button","useDispatch","useSelector","Loader","Message","listOrders","OrderListScreen","history","dispatch","orderList","state","loading","error","orders","userLogin","userInfo","isAdmin","push","products","map","product","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n\r\n\r\n                    {loading ? <Loader />\r\n                                : error ? <Message variant='danger'>{error}</Message>\r\n                                    :\r\n                                    <Row className='flex flex-wrap' >\r\n\r\n\r\n                                            {products.map(product => (\r\n                                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                                    <Product product={product} />\r\n                                                </Col>\r\n                                            ))}\r\n                                    </Row>  \r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                    : \r\n\r\n                    <Row className='flex flex-wrap' >\r\n\r\n\r\n                                            {orders.map(product => (\r\n                                                <Col>\r\n                                                    {orderList._id}\r\n                                                </Col>\r\n                                            ))}\r\n                    </Row>\r\n                    //     <Table striped bordered hover responsive className='table-sm'>\r\n                    //         <thead>\r\n                    //             <tr>\r\n                    //                 <th>ID</th>\r\n                    //                 <th>USER</th>\r\n                    //                 <th>DATE</th>\r\n                    //                 <th>Total</th>\r\n                    //                 <th>PAID</th>\r\n                    //                 <th>DELIVERED</th>\r\n                    //                 <th></th>\r\n                    //             </tr>\r\n                    //         </thead>\r\n\r\n                    //         <tbody>\r\n                    //             {orders.map(order => (\r\n                    //                 <tr key={order._id}>\r\n                    //                     <td>{order._id}</td>\r\n                    //                     <td>{order.user && order.user.name}</td>\r\n                    //                     <td>{order.createdAt.substring(0, 10)}</td>\r\n                    //                     <td>${order.totalPrice}</td>\r\n\r\n                    //                     <td>{order.isPaid ? (\r\n                    //                         order.paidAt.substring(0, 10)\r\n                    //                     ) : (\r\n                    //                             <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                    //                         )}\r\n                    //                     </td>\r\n\r\n                    //                     <td>{order.isDelivered ? (\r\n                    //                         order.deliveredAt.substring(0, 10)\r\n                    //                     ) : (\r\n                    //                             <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                    //                         )}\r\n                    //                     </td>\r\n\r\n                    //                     <td>\r\n                    //                         <LinkContainer to={`/order/${order._id}`}>\r\n                    //                             <Button variant='light' className='btn-sm'>\r\n                    //                                 Details\r\n                    //                             </Button>\r\n                    //                         </LinkContainer>\r\n\r\n\r\n                    //                     </td>\r\n                    //                 </tr>\r\n                    //             ))}\r\n                    //         </tbody>\r\n                    //     </Table>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen"]},"metadata":{},"sourceType":"module"}