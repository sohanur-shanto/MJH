{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_CONFIRM_REQUEST, ORDER_CONFIRM_SUCCESS, ORDER_CONFIRM_FAIL } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport axios from 'axios';\nexport const confirm = comment => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_CONFIRM_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/orders/confirm', {\n      'comment': comment\n    }, config);\n    dispatch({\n      type: ORDER_CONFIRM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CONFIRM_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}/`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // export const listOrders = () => async (dispatch, getState) => {\n//     try{\n//        dispatch({\n//             type: ORDER_LIST_REQUEST\n//         }) \n//         const { \n//             userLogin: { userInfo },\n//         } = getState()\n//        const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n//        const {data} = await axios.get(\n//             `/api/orders/`,\n//             config\n//         )\n//        dispatch({\n//            type: ORDER_LIST_SUCCESS,\n//            payload: data\n//        })\n//     } catch(error){\n//        dispatch({\n//            type: ORDER_LIST_FAIL,\n//            payload: error.response && error.response.data.detail\n//            ? error.response.data.detail\n//            : error.message,\n//        })\n//     }\n// }\n// // export const listOrders = () => async (dispatch, getState) => {\n// //     try{\n// //        dispatch({\n// //             type: ORDER_LIST_REQUEST\n// //         }) \n// //         const { \n// //             userLogin: { userInfo },\n// //         } = getState()\n// //        const config = {\n// //             headers: {\n// //                 'Content-type': 'application/json',\n// //                 Authorization: `Bearer ${userInfo.token}`\n// //             }\n// //         }\n// //        const {data} = await axios.get(\n// //             `/api/orders/`,\n// //             config\n// //         )\n// //        dispatch({\n// //            type: ORDER_LIST_SUCCESS,\n// //            payload: data\n// //        })\n// //     } catch(error){\n// //        dispatch({\n// //            type: ORDER_LIST_FAIL,\n// //            payload: error.response && error.response.data.detail\n// //            ? error.response.data.detail\n// //            : error.message,\n// //        })\n// //     }\n// // }","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_CONFIRM_REQUEST","ORDER_CONFIRM_SUCCESS","ORDER_CONFIRM_FAIL","CART_CLEAR_ITEMS","axios","confirm","comment","dispatch","type","config","headers","data","post","payload","error","response","detail","message","createOrder","order","getState","userLogin","userInfo","Authorization","token","localStorage","removeItem","getOrderDetails","id","get","payOrder","paymentResult","put","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_CONFIRM_REQUEST,\r\n    ORDER_CONFIRM_SUCCESS,\r\n    ORDER_CONFIRM_FAIL,\r\n\r\n\r\n } from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport const confirm = (comment) => async (dispatch) => {\r\n    try{\r\n        \r\n       dispatch({\r\n            type: ORDER_CONFIRM_REQUEST\r\n        }) \r\n\r\n        \r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n       const {data} = await axios.post(\r\n            '/api/orders/confirm',\r\n            { 'comment': comment },\r\n            config\r\n           )\r\n           \r\n       dispatch({\r\n           type: ORDER_CONFIRM_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n\r\n\r\n    }catch(error){\r\n       dispatch({\r\n           type: ORDER_CONFIRM_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        }) \r\n\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n           )\r\n           \r\n       dispatch({\r\n           type: ORDER_CREATE_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n       dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n\r\n    } catch(error){\r\n       dispatch({\r\n           type: ORDER_CREATE_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        }) \r\n\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n           \r\n       dispatch({\r\n           type: ORDER_DETAILS_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n\r\n    } catch(error){\r\n       dispatch({\r\n           type: ORDER_DETAILS_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        }) \r\n\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.put(\r\n            `/api/orders/${id}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n           \r\n       dispatch({\r\n           type: ORDER_PAY_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n    } catch(error){\r\n       dispatch({\r\n           type: ORDER_PAY_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        }) \r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.get(\r\n            `/api/orders/myorders`,\r\n            config\r\n        )\r\n           \r\n       dispatch({\r\n           type: ORDER_LIST_MY_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n    } catch(error){\r\n       dispatch({\r\n           type: ORDER_LIST_MY_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        }) \r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n           \r\n       dispatch({\r\n           type: ORDER_LIST_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n\r\n    } catch(error){\r\n       dispatch({\r\n           type: ORDER_LIST_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const listOrders = () => async (dispatch, getState) => {\r\n//     try{\r\n//        dispatch({\r\n//             type: ORDER_LIST_REQUEST\r\n//         }) \r\n\r\n//         const { \r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n        \r\n//        const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//        const {data} = await axios.get(\r\n//             `/api/orders/`,\r\n//             config\r\n//         )\r\n           \r\n//        dispatch({\r\n//            type: ORDER_LIST_SUCCESS,\r\n//            payload: data\r\n//        })\r\n\r\n\r\n//     } catch(error){\r\n//        dispatch({\r\n//            type: ORDER_LIST_FAIL,\r\n//            payload: error.response && error.response.data.detail\r\n//            ? error.response.data.detail\r\n//            : error.message,\r\n//        })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// // export const listOrders = () => async (dispatch, getState) => {\r\n// //     try{\r\n// //        dispatch({\r\n// //             type: ORDER_LIST_REQUEST\r\n// //         }) \r\n\r\n\r\n// //         const { \r\n// //             userLogin: { userInfo },\r\n// //         } = getState()\r\n\r\n        \r\n\r\n// //        const config = {\r\n// //             headers: {\r\n// //                 'Content-type': 'application/json',\r\n// //                 Authorization: `Bearer ${userInfo.token}`\r\n// //             }\r\n// //         }\r\n\r\n\r\n// //        const {data} = await axios.get(\r\n// //             `/api/orders/`,\r\n// //             config\r\n// //         )\r\n           \r\n// //        dispatch({\r\n// //            type: ORDER_LIST_SUCCESS,\r\n// //            payload: data\r\n// //        })\r\n\r\n\r\n\r\n// //     } catch(error){\r\n// //        dispatch({\r\n// //            type: ORDER_LIST_FAIL,\r\n// //            payload: error.response && error.response.data.detail\r\n// //            ? error.response.data.detail\r\n// //            : error.message,\r\n// //        })\r\n// //     }\r\n// // }\r\n\r\n"]},"metadata":{},"sourceType":"module"}