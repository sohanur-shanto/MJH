{"ast":null,"code":"var _jsxFileName = \"E:\\\\Laksura_Project\\\\frontend\\\\src\\\\screens\\\\CategoryScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Tabs, Tab, Modal, Button, Image, ListGroup, Form } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport ProductCarousel from '../components/ProductCarousel';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Container } from 'react-floating-action-button';\nimport { categoryListProducts } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryScreen({\n  history\n}) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n\n  const removeFromCartHandler = id => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    error,\n    loading,\n    products\n  } = productList;\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n\n    params: {}\n  }, [dispatch, keyword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex flex-wrap\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }, this)\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CategoryScreen, \"PFHUmkVJnVROxxaNbnopkPWkdKE=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = CategoryScreen;\nexport default CategoryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryScreen\");","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/screens/CategoryScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Tabs","Tab","Modal","Button","Image","ListGroup","Form","Product","Loader","Message","useDispatch","useSelector","listProducts","ProductCarousel","addToCart","removeFromCart","LinkContainer","Container","categoryListProducts","CategoryScreen","history","cart","state","cartItems","removeFromCartHandler","id","dispatch","checkoutHandler","push","show","setShow","handleClose","handleShow","productList","error","loading","products","keyword","location","search","params","map","product","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Tabs, Tab, Modal, Button, Image, ListGroup, Form } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Container} from 'react-floating-action-button'\r\nimport { categoryListProducts } from '../actions/productActions'\r\n\r\n\r\n\r\nfunction CategoryScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products} = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n        params: {  }\r\n    }, [dispatch, keyword])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <Row className='flex flex-wrap' >\r\n\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                    </Row>  \r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryScreen\r\n"]},"metadata":{},"sourceType":"module"}