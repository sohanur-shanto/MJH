{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productListReducer,productDetailsReducer,productTopRatedReducer,stormListReducer,categoryProductListReducer}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer}from'./reducers/userReducers';import{orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer,orderListReducer,orderConfirmReducer}from'./reducers/orderReducers';var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer,userDetails:userDetailsReducer,userUpdateProfile:userUpdateProfileReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderListMy:orderListMyReducer,productTopRated:productTopRatedReducer,stormList:stormListReducer,orderList:orderListReducer,categoryProductList:categoryProductListReducer,orderConfirm:orderConfirmReducer});var cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{};var initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["D:/Laksura_Project/backend/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productTopRatedReducer","stormListReducer","categoryProductListReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderConfirmReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","productTopRated","stormList","orderList","categoryProductList","orderConfirm","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,kBAAT,CAA6BC,qBAA7B,CAAoDC,sBAApD,CAA4EC,gBAA5E,CAA8FC,0BAA9F,KAAgI,4BAAhI,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,gBAAT,CAA2BC,mBAA3B,CAAgDC,kBAAhD,CAAoEC,wBAApE,KAAoG,yBAApG,CACA,OAASC,kBAAT,CAA6BC,mBAA7B,CAAkDC,eAAlD,CAAmEC,kBAAnE,CAAuFC,gBAAvF,CAAyGC,mBAAzG,KAAoI,0BAApI,CAGA,GAAMC,CAAAA,OAAO,CAAGpB,eAAe,CAAC,CAC5BqB,WAAW,CAAEjB,kBADe,CAE5BkB,cAAc,CAAEjB,qBAFY,CAG5BkB,IAAI,CAAEd,WAHsB,CAI5Be,SAAS,CAAEd,gBAJiB,CAK5Be,YAAY,CAAEd,mBALc,CAM5Be,WAAW,CAAEd,kBANe,CAO5Be,iBAAiB,CAAEd,wBAPS,CAQ5Be,WAAW,CAAEd,kBARe,CAS5Be,YAAY,CAAEd,mBATc,CAU5Be,QAAQ,CAAEd,eAVkB,CAW5Be,WAAW,CAAEd,kBAXe,CAY5Be,eAAe,CAAE1B,sBAZW,CAa5B2B,SAAS,CAAE1B,gBAbiB,CAc5B2B,SAAS,CAAEhB,gBAdiB,CAe5BiB,mBAAmB,CAAE3B,0BAfO,CAgB5B4B,YAAY,CAAEjB,mBAhBc,CAAD,CAA/B,CAmBA,GAAMkB,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,CACuB,EADpD,CAIA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,CACuB,IADnD,CAIA,GAAMI,CAAAA,0BAA0B,CAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,CACuB,EAD1D,CAIA,GAAMK,CAAAA,YAAY,CAAG,CACjBrB,IAAI,CAAE,CACFsB,SAAS,CAAER,oBADT,CAEFS,eAAe,CAAEH,0BAFf,CADW,CAIjBnB,SAAS,CAAE,CAAEuB,QAAQ,CAAEL,mBAAZ,CAJM,CAArB,CAOA,GAAMM,CAAAA,UAAU,CAAG,CAAC9C,KAAD,CAAnB,CAEA,GAAM+C,CAAAA,KAAK,CAAGlD,WAAW,CAACqB,OAAD,CAAUwB,YAAV,CACrBzC,mBAAmB,CAACF,eAAe,MAAf,QAAmB+C,UAAnB,CAAD,CADE,CAAzB,CAGA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productTopRatedReducer, stormListReducer, categoryProductListReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderConfirmReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    stormList: stormListReducer,\r\n    orderList: orderListReducer,\r\n    categoryProductList: categoryProductListReducer,\r\n    orderConfirm: orderConfirmReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}