{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectListAdapter = exports.MapListAdapter = exports.ArrayListAdapter = exports.EmptyListAdapter = exports.ListAdapter = exports.ItemAdapter = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _keycode = require('keycode');\n\nvar _keycode2 = _interopRequireDefault(_keycode);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = require('react-bootstrap');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _Choices = require('./Choices');\n\nvar _Choices2 = _interopRequireDefault(_Choices);\n\nvar _Suggestions = require('./Suggestions');\n\nvar _Suggestions2 = _interopRequireDefault(_Suggestions);\n\nvar _ItemAdapter = require('./ItemAdapter');\n\nvar _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);\n\nvar _ListAdapter = require('./ListAdapter');\n\nvar _ListAdapter2 = _interopRequireDefault(_ListAdapter);\n\nvar _EmptyListAdapter = require('./EmptyListAdapter');\n\nvar _EmptyListAdapter2 = _interopRequireDefault(_EmptyListAdapter);\n\nvar _ArrayListAdapter = require('./ArrayListAdapter');\n\nvar _ArrayListAdapter2 = _interopRequireDefault(_ArrayListAdapter);\n\nvar _MapListAdapter = require('./MapListAdapter');\n\nvar _MapListAdapter2 = _interopRequireDefault(_MapListAdapter);\n\nvar _ObjectListAdapter = require('./ObjectListAdapter');\n\nvar _ObjectListAdapter2 = _interopRequireDefault(_ObjectListAdapter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nexports.ItemAdapter = _ItemAdapter2['default'];\nexports.ListAdapter = _ListAdapter2['default'];\nexports.EmptyListAdapter = _EmptyListAdapter2['default'];\nexports.ArrayListAdapter = _ArrayListAdapter2['default'];\nexports.MapListAdapter = _MapListAdapter2['default'];\nexports.ObjectListAdapter = _ObjectListAdapter2['default'];\n/**\n * Combo-box input component that combines a drop-down list and a single-line\n * editable text box. The set of options for the drop-down list can be\n * controlled dynamically. Selection of multiple items is supported using a\n * tag/pill-style user interface within a simulated text box.\n */\n\nvar Autosuggest = function (_React$Component) {\n  _inherits(Autosuggest, _React$Component);\n\n  _createClass(Autosuggest, null, [{\n    key: 'defaultInputSelect',\n    value: function defaultInputSelect(input, value, completion) {\n      // https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n      switch (input.type) {\n        case 'text':\n        case 'search':\n        case 'url':\n        case 'tel':\n        case 'password':\n          // istanbul ignore else\n          if (input.setSelectionRange) {\n            input.setSelectionRange(value.length, completion.length);\n          } else if (input.createTextRange) {\n            // old IE\n            var range = input.createTextRange();\n            range.moveEnd('character', completion.length);\n            range.moveStart('character', value.length);\n            range.select();\n          }\n\n      }\n    }\n  }]);\n\n  function Autosuggest(props) {\n    var _ref;\n\n    _classCallCheck(this, Autosuggest);\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    /* istanbul ignore next: https://github.com/gotwarlost/istanbul/issues/690#issuecomment-265718617 */\n\n\n    var _this = _possibleConstructorReturn(this, (_ref = Autosuggest.__proto__ || Object.getPrototypeOf(Autosuggest)).call.apply(_ref, [this, props].concat(_toConsumableArray(args))));\n\n    _this._itemAdapter = props.itemAdapter || new _ItemAdapter2['default']();\n\n    _this._itemAdapter.receiveProps(props);\n\n    _this._listAdapter = props.datalistAdapter || _this._getListAdapter(props.datalist);\n\n    _this._listAdapter.receiveProps(props, _this._itemAdapter);\n\n    var _this$_getValueFromPr = _this._getValueFromProps(props),\n        inputValue = _this$_getValueFromPr.inputValue,\n        inputItem = _this$_getValueFromPr.inputItem,\n        inputItemEphemeral = _this$_getValueFromPr.inputItemEphemeral,\n        selectedItems = _this$_getValueFromPr.selectedItems;\n\n    _this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n\n    _this._lastValidItem = inputItem;\n    _this._lastValidValue = inputValue;\n    _this._keyPressCount = 0;\n    _this.state = {\n      open: false,\n      disableFilter: false,\n      inputValue: inputValue,\n      inputValueKeyPress: 0,\n      inputFocused: false,\n      selectedItems: selectedItems,\n      searchValue: null\n    };\n    _this._lastOnChangeValue = _this._getCurrentValue();\n    _this._lastOnSelectValue = inputItem;\n    var self = _this; // https://github.com/facebook/flow/issues/1517\n\n    self._renderSelected = _this._renderSelected.bind(_this);\n    self._getItemKey = _this._getItemKey.bind(_this);\n    self._isSelectedItem = _this._isSelectedItem.bind(_this);\n    self._renderSuggested = _this._renderSuggested.bind(_this);\n    self._handleToggleClick = _this._handleToggleClick.bind(_this);\n    self._handleInputChange = _this._handleInputChange.bind(_this);\n    self._handleItemSelect = _this._handleItemSelect.bind(_this);\n    self._removeItem = _this._removeItem.bind(_this);\n    self._handleShowAll = _this._handleShowAll.bind(_this);\n    self._handleKeyDown = _this._handleKeyDown.bind(_this);\n    self._handleKeyPress = _this._handleKeyPress.bind(_this);\n    self._handleMenuClose = _this._handleMenuClose.bind(_this);\n    self._handleInputFocus = _this._handleInputFocus.bind(_this);\n    self._handleInputBlur = _this._handleInputBlur.bind(_this);\n    self._handleFocus = _this._handleFocus.bind(_this);\n    self._handleBlur = _this._handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Autosuggest, [{\n    key: '_getListAdapter',\n    value: function _getListAdapter(list) {\n      if (list == null) {\n        return new _EmptyListAdapter2['default']();\n      } else if (Array.isArray(list)) {\n        return new _ArrayListAdapter2['default']();\n      } else if (list instanceof Map) {\n        return new _MapListAdapter2['default']();\n      } else if (typeof list === 'object') {\n        return new _ObjectListAdapter2['default']();\n      } else {\n        throw Error('Unexpected datalist type: datalistAdapter required');\n      }\n    }\n  }, {\n    key: '_getValueFromProps',\n    value: function _getValueFromProps(props) {\n      var inputValue = '';\n      var inputItem = null;\n      var inputItemEphemeral = false;\n      var selectedItems = [];\n      var value = props.value || props.defaultValue;\n\n      if (value != null) {\n        if (props.multiple) {\n          if (Array.isArray(value)) {\n            selectedItems = this._filterItems(value, props);\n          } else {\n            (0, _warning2['default'])(!value, 'Array expected for value property');\n          }\n        } else if (props.valueIsItem) {\n          var itemValue = this._itemAdapter.getInputValue(value);\n\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, itemValue);\n\n            if (inputItem != null) {\n              inputValue = inputItem === value ? itemValue : this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = itemValue;\n              inputItem = value;\n            }\n          } else {\n            inputValue = itemValue;\n            inputItem = value;\n          }\n        } else if (value) {\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, value);\n\n            if (inputItem != null) {\n              inputValue = this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = value.toString();\n              inputItem = this._itemAdapter.newFromValue(value);\n              inputItemEphemeral = true;\n            }\n          } else {\n            inputValue = value.toString();\n            inputItem = this._itemAdapter.newFromValue(value);\n            inputItemEphemeral = true;\n          }\n        }\n      }\n\n      return {\n        inputValue: inputValue,\n        inputItem: inputItem,\n        inputItemEphemeral: inputItemEphemeral,\n        selectedItems: selectedItems\n      };\n    }\n  }, {\n    key: '_filterItems',\n    value: function _filterItems(items, props) {\n      if (props.datalist != null || !props.allowDuplicates) {\n        var result = [];\n        var valueSet = {};\n        var different = false;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _item = _step.value;\n\n            var _value = this._itemAdapter.getInputValue(_item);\n\n            if (!props.allowDuplicates && valueSet[_value]) {\n              different = true;\n              continue;\n            }\n\n            var listItem = this._listAdapter.findMatching(props.datalist, _value);\n\n            if (listItem != null) {\n              result.push(listItem);\n              valueSet[_value] = true;\n              different = true;\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(_value);\n\n              different = true;\n            } else {\n              result.push(_item);\n              valueSet[_value] = true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (different) {\n          return result;\n        }\n      }\n\n      return items;\n    }\n  }, {\n    key: '_warnInvalidValue',\n    value: function _warnInvalidValue(value) {\n      (0, _warning2['default'])(false, 'Value \"%s\" does not match any datalist value', value);\n    }\n  }, {\n    key: '_setInputValue',\n    value: function _setInputValue(value, callback) {\n      // track keypress count in state so re-render is forced even if value is\n      // unchanged; this is necessary when typing over the autocompleted range\n      // with matching characters to properly maintain the input selection range\n      this.setState({\n        inputValue: value,\n        inputValueKeyPress: this._keyPressCount\n      }, callback);\n    }\n  }, {\n    key: '_setValueMeta',\n    value: function _setValueMeta(inputItem) {\n      var inputItemEphemeral = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : inputItem != null;\n      var validated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isValid;\n      this._inputItem = inputItem;\n      this._inputItemEphemeral = inputItemEphemeral;\n      this._valueIsValid = isValid;\n      this._valueWasValidated = validated;\n    }\n  }, {\n    key: '_clearInput',\n    value: function _clearInput() {\n      this._setValueMeta(null, false, true, true);\n\n      this._setInputValue('');\n    }\n  }, {\n    key: '_getValueUsing',\n    value: function _getValueUsing(props, inputValue, inputItem, selectedItems) {\n      return props.multiple ? selectedItems : props.valueIsItem ? inputItem : inputValue;\n    }\n  }, {\n    key: '_getCurrentValue',\n    value: function _getCurrentValue() {\n      return this._getValueUsing(this.props, this.state.inputValue, this._inputItem, this.state.selectedItems);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // IE8 can jump cursor position if not immediately updated to typed value;\n      // for other browsers, we can avoid re-rendering for the auto-complete\n      this._autoCompleteAfterRender = !this.refs.input.setSelectionRange;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.itemAdapter != this.props.itemAdapter) {\n        this._itemAdapter = nextProps.itemAdapter || new _ItemAdapter2['default']();\n      }\n\n      this._itemAdapter.receiveProps(nextProps);\n\n      if (nextProps.datalist != this.props.datalist || nextProps.datalistAdapter != this.props.datalistAdapter) {\n        if (nextProps.datalistAdapter) {\n          this._listAdapter = nextProps.datalistAdapter;\n        } else {\n          var listAdapter = this._getListAdapter(nextProps.datalist);\n\n          if (listAdapter.constructor != this._listAdapter.constructor) {\n            this._listAdapter = listAdapter;\n          }\n        }\n      }\n\n      this._listAdapter.receiveProps(nextProps, this._itemAdapter); // if props.value changes (to a value other than the current state), or\n      // validation changes to make state invalid, propagate props.value to state\n\n\n      var nextValue = nextProps.value;\n      var inputValue = this.state.inputValue;\n\n      var valueChanged = nextValue !== this.props.value && nextValue !== this._getValueUsing(nextProps, inputValue, this._inputItem, this.state.selectedItems);\n\n      var inputItem = void 0,\n          inputValueInvalid = void 0,\n          propsValueInvalid = void 0,\n          validateSelected = void 0;\n\n      if (!valueChanged) {\n        if (nextProps.datalistOnly) {\n          var canValidate = !nextProps.datalistPartial && nextProps.datalist != null;\n          var validationChanged = !this.props.datalistOnly || !nextProps.datalistPartial && this.props.datalistPartial || nextProps.datalist != this.props.datalist;\n\n          if (inputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, inputValue);\n\n            if (inputItem == null) {\n              if (!canValidate && !this._inputItemEphemeral) {\n                inputItem = this._inputItem;\n              } else if (this._inputItemEphemeral && nextValue === inputValue) {\n                propsValueInvalid = true;\n              }\n            }\n\n            inputValueInvalid = inputItem == null && validationChanged; // update metadata but don't reset input value if invalid but focused\n\n            if (inputValueInvalid && this._focused) {\n              this._setValueMeta(null, false, false, true);\n\n              if (validationChanged && canValidate && this._lastValidItem != null) {\n                // revalidate last valid item, which will be restored on blur\n                this._lastValidItem = this._listAdapter.findMatching(nextProps.datalist, this._lastValidValue);\n\n                if (this._lastValidItem == null) {\n                  this._lastValidValue = '';\n                }\n              }\n\n              inputValueInvalid = false;\n            }\n          } else {\n            inputItem = null;\n            inputValueInvalid = false;\n          }\n\n          validateSelected = nextProps.multiple && canValidate && validationChanged;\n        }\n\n        if (nextProps.multiple && !nextProps.allowDuplicates && this.props.allowDuplicates) {\n          validateSelected = true;\n        }\n      } // inputValueInvalid implies !multiple, since inputValue of multiple should\n      // be blank when not focused\n\n\n      if (valueChanged || inputValueInvalid) {\n        var inputItemEphemeral = void 0,\n            _selectedItems = void 0;\n\n        if (propsValueInvalid) {\n          inputValue = '';\n          inputItemEphemeral = false;\n          _selectedItems = [];\n        } else {\n          var _getValueFromProps2 = this._getValueFromProps(nextProps);\n\n          inputValue = _getValueFromProps2.inputValue;\n          inputItem = _getValueFromProps2.inputItem;\n          inputItemEphemeral = _getValueFromProps2.inputItemEphemeral;\n          _selectedItems = _getValueFromProps2.selectedItems;\n        } // if props.value change resolved to current state item, don't reset input\n\n\n        if (inputItem !== this._inputItem || !this._focused) {\n          this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n\n          this._setInputValue(inputValue);\n\n          this.setState({\n            selectedItems: _selectedItems\n          });\n          validateSelected = false;\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputValue; // suppress onChange (but not onSelect) if value came from props\n\n          if (valueChanged) {\n            this._lastOnChangeValue = this._getValueUsing(nextProps, inputValue, inputItem, _selectedItems);\n          }\n        } else if (valueChanged && nextProps.multiple) {\n          this.setState({\n            selectedItems: _selectedItems\n          });\n        }\n      } else if (inputValue && nextProps.datalist != this.props.datalist && this._focused) {\n        // if datalist changed but value didn't, attempt to autocomplete\n        this._checkAutoComplete(inputValue, nextProps);\n      }\n\n      if (validateSelected) {\n        var _selectedItems2 = this._filterItems(this.state.selectedItems, nextProps);\n\n        this.setState({\n          selectedItems: _selectedItems2\n        });\n      } // open dropdown if datalist message is set while focused\n\n\n      if (nextProps.datalistMessage && nextProps.datalistMessage != this.props.datalistMessage && this._focused) {\n        this._open('message', nextProps);\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      var suggestions = this.refs.suggestions;\n      this._menuFocusedBeforeUpdate = suggestions && suggestions.isFocused();\n      var nextInputValue = nextState.inputValue;\n\n      if (nextInputValue != this.state.inputValue) {\n        var inputItem = void 0,\n            inputItemEphemeral = void 0,\n            isValid = void 0;\n\n        if (!this._valueWasValidated) {\n          if (nextInputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, nextInputValue);\n\n            if (inputItem == null && !nextProps.datalistOnly) {\n              inputItem = this._itemAdapter.newFromValue(nextInputValue);\n              inputItemEphemeral = true;\n              isValid = true;\n            } else {\n              inputItemEphemeral = false;\n              isValid = inputItem != null;\n            }\n          } else {\n            inputItem = null;\n            inputItemEphemeral = false;\n            isValid = !nextProps.required;\n          }\n\n          this._setValueMeta(inputItem, inputItemEphemeral, isValid);\n        } else {\n          inputItem = this._inputItem;\n          isValid = this._valueIsValid;\n        }\n\n        if (isValid) {\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputItem && !inputItemEphemeral ? this._itemAdapter.getInputValue(inputItem) : nextInputValue;\n        }\n\n        if (isValid) {\n          var _multiple = nextProps.multiple,\n              _onChange = nextProps.onChange;\n\n          if (!_multiple && _onChange) {\n            var _value2 = this._getValueUsing(nextProps, nextInputValue, inputItem, nextState.selectedItems);\n\n            if (_value2 !== this._lastOnChangeValue) {\n              this._lastOnChangeValue = _value2;\n\n              _onChange(_value2);\n            }\n          }\n\n          var _onSelect = nextProps.onSelect;\n\n          if (_onSelect && inputItem !== this._lastOnSelectValue) {\n            this._lastOnSelectValue = inputItem;\n\n            _onSelect(inputItem);\n          }\n        }\n      }\n\n      var onToggle = nextProps.onToggle;\n\n      if (onToggle && nextState.open != this.state.open) {\n        onToggle(nextState.open);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.open && !prevState.open && this._lastOpenEventType === 'keydown' || this.state.disableFilter && !prevState.disableFilter && this._menuFocusedBeforeUpdate) {\n        this.refs.suggestions.focusFirst();\n      } else if (!this.state.open && prevState.open) {\n        // closed\n        if (this._menuFocusedBeforeUpdate) {\n          this._menuFocusedBeforeUpdate = false;\n\n          this._focusInput();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this._focusTimeoutId);\n      this._focusTimeoutId = null;\n      clearTimeout(this._searchTimeoutId);\n      this._searchTimeoutId = null;\n    }\n  }, {\n    key: '_focusInput',\n    value: function _focusInput() {\n      var input = _reactDom2['default'].findDOMNode(this.refs.input); // istanbul ignore else\n\n\n      if (input instanceof HTMLElement) {\n        input.focus();\n      }\n    }\n  }, {\n    key: '_open',\n    value: function _open(eventType, props) {\n      this._lastOpenEventType = eventType;\n\n      var disableFilter = eventType !== 'autocomplete' && this._hasNoOrExactMatch(props);\n\n      this.setState({\n        open: true,\n        disableFilter: disableFilter\n      });\n      var onSearch = props.onSearch;\n      var _state = this.state,\n          inputValue = _state.inputValue,\n          searchValue = _state.searchValue;\n\n      if (onSearch && searchValue !== inputValue) {\n        this.setState({\n          searchValue: inputValue\n        });\n        onSearch(inputValue);\n      }\n    }\n  }, {\n    key: '_close',\n    value: function _close() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: '_toggleOpen',\n    value: function _toggleOpen(eventType, props) {\n      if (this.state.open) {\n        this._close();\n      } else {\n        this._open(eventType, props);\n      }\n    }\n  }, {\n    key: '_canOpen',\n    value: function _canOpen() {\n      var datalist = this.props.datalist;\n      return datalist == null && this.props.onSearch || !this._listAdapter.isEmpty(datalist) || !!this.props.datalistMessage;\n    }\n  }, {\n    key: '_hasNoOrExactMatch',\n    value: function _hasNoOrExactMatch(props) {\n      var _this2 = this;\n\n      if (this._inputItem != null && !this._inputItemEphemeral) {\n        return true; // exact match\n      }\n\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n\n      return this._listAdapter.find(props.datalist, function (item) {\n        return _this2._itemAdapter.itemIncludedByInput(item, foldedValue);\n      }) == null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var showToggle = this.props.showToggle;\n\n      var toggleCanOpen = this._canOpen();\n\n      var toggleVisible = showToggle === 'auto' ? toggleCanOpen : showToggle;\n      var classes = {\n        autosuggest: true,\n        open: this.state.open,\n        disabled: this.props.disabled,\n        dropdown: toggleVisible && !this.props.dropup,\n        dropup: toggleVisible && this.props.dropup\n      };\n      return _react2['default'].createElement('div', {\n        key: 'dropdown',\n        className: (0, _classnames2['default'])(classes),\n        onFocus: this._handleFocus,\n        onBlur: this._handleBlur\n      }, this._renderInputGroup(toggleVisible, toggleCanOpen), this._renderMenu());\n    }\n  }, {\n    key: '_renderInputGroup',\n    value: function _renderInputGroup(toggleVisible, toggleCanOpen) {\n      var addonBefore = this.props.addonBefore ? _react2['default'].createElement('span', {\n        className: 'input-group-addon',\n        key: 'addonBefore'\n      }, this.props.addonBefore) : null;\n      var addonAfter = this.props.addonAfter ? _react2['default'].createElement('span', {\n        className: 'input-group-addon',\n        key: 'addonAfter'\n      }, this.props.addonAfter) : null;\n      var buttonBefore = this.props.buttonBefore ? _react2['default'].createElement('span', {\n        className: 'input-group-btn'\n      }, this.props.buttonBefore) : null; // Bootstrap expects the dropdown toggle to be last,\n      // as it does not reset the right border radius for toggles:\n      // .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle)\n      // { @include border-right-radius(0); }\n\n      var toggle = toggleVisible && this._renderToggle(toggleCanOpen);\n\n      var buttonAfter = toggle || this.props.buttonAfter ? _react2['default'].createElement('span', {\n        className: 'input-group-btn'\n      }, this.props.buttonAfter, toggle) : null;\n      var classes = (0, _classnames2['default'])({\n        'input-group': addonBefore || addonAfter || buttonBefore || buttonAfter,\n        'input-group-sm': this.props.bsSize === 'small',\n        'input-group-lg': this.props.bsSize === 'large',\n        'input-group-toggle': !!toggle\n      });\n      return classes ? _react2['default'].createElement('div', {\n        className: classes,\n        key: 'input-group'\n      }, addonBefore, buttonBefore, this._renderChoices(), addonAfter, buttonAfter) : this._renderChoices();\n    }\n  }, {\n    key: '_renderToggle',\n    value: function _renderToggle(canOpen) {\n      return _react2['default'].createElement(_reactBootstrap.Dropdown.Toggle, {\n        ref: 'toggle',\n        key: 'toggle',\n        id: this.props.toggleId,\n        bsSize: this.props.bsSize,\n        disabled: this.props.disabled || !canOpen,\n        open: this.state.open,\n        onClick: this._handleToggleClick,\n        onKeyDown: this._handleKeyDown\n      });\n    }\n  }, {\n    key: '_renderChoices',\n    value: function _renderChoices() {\n      if (this.props.multiple) {\n        var _props$choicesClass = this.props.choicesClass,\n            ChoicesClass = _props$choicesClass === undefined ? _Choices2['default'] : _props$choicesClass;\n        return _react2['default'].createElement(ChoicesClass, {\n          ref: 'choices',\n          autoHeight: !this.props.showToggle && !this.props.addonAfter && !this.props.addonBefore && !this.props.buttonAfter && !this.props.buttonBefore,\n          disabled: this.props.disabled,\n          focused: this.state.inputFocused,\n          inputValue: this.state.inputValue,\n          items: this.state.selectedItems,\n          onKeyPress: this._handleKeyPress,\n          onRemove: this._removeItem,\n          renderItem: this._renderSelected\n        }, this._renderInput());\n      }\n\n      return this._renderInput();\n    } // autobind\n\n  }, {\n    key: '_renderSelected',\n    value: function _renderSelected(item) {\n      return this._itemAdapter.renderSelected(item);\n    }\n  }, {\n    key: '_renderInput',\n    value: function _renderInput() {\n      var formGroup = this.context.$bs_formGroup;\n      var controlId = formGroup && formGroup.controlId;\n      var extraProps = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Object.keys(this.props)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n\n          if (!Autosuggest.propTypes[key]) {\n            extraProps[key] = this.props[key];\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var noneSelected = !this.props.multiple || !this.state.selectedItems.length; // set autoComplete off to avoid a redundant browser drop-down menu,\n      // but allow it to be overridden by extra props for auto-fill purposes\n\n      return _react2['default'].createElement('input', _extends({\n        autoComplete: 'off'\n      }, extraProps, {\n        className: (0, _classnames2['default'])(this.props.className, {\n          'form-control': !this.props.multiple\n        }),\n        ref: 'input',\n        key: 'input',\n        id: controlId,\n        disabled: this.props.disabled,\n        required: this.props.required && noneSelected,\n        placeholder: noneSelected ? this.props.placeholder : undefined,\n        type: this.props.type,\n        value: this.state.inputValue,\n        onChange: this._handleInputChange,\n        onKeyDown: this._handleKeyDown,\n        onKeyPress: this._handleKeyPress,\n        onFocus: this._handleInputFocus,\n        onBlur: this._handleInputBlur\n      }));\n    }\n  }, {\n    key: '_renderMenu',\n    value: function _renderMenu() {\n      var _this3 = this;\n\n      this._pseudofocusedItem = null;\n      var open = this.state.open;\n\n      if (!open) {\n        return null;\n      }\n\n      var datalist = this.props.datalist;\n\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n\n      this._foldedInputValue = foldedValue;\n      var items = void 0;\n\n      if (this.state.disableFilter) {\n        items = this._listAdapter.toArray(datalist);\n      } else {\n        items = this._listAdapter.filter(datalist, function (item) {\n          return _this3._itemAdapter.itemIncludedByInput(item, foldedValue) && _this3._allowItem(item);\n        });\n      }\n\n      items = this._itemAdapter.sortItems(items, foldedValue);\n\n      var filtered = items.length < this._listAdapter.getLength(datalist); // visually indicate that first item will be selected if Enter is pressed\n      // while the input element is focused (unless multiple and not datalist-only)\n\n\n      var focusedIndex = void 0;\n\n      if (items.length > 0 && this.state.inputFocused && (!this.props.multiple || this.props.datalistOnly)) {\n        this._pseudofocusedItem = items[focusedIndex = 0];\n      }\n\n      var _props = this.props,\n          _props$suggestionsCla = _props.suggestionsClass,\n          SuggestionsClass = _props$suggestionsCla === undefined ? _Suggestions2['default'] : _props$suggestionsCla,\n          datalistMessage = _props.datalistMessage,\n          onDatalistMessageSelect = _props.onDatalistMessageSelect,\n          toggleId = _props.toggleId;\n      return _react2['default'].createElement(SuggestionsClass, {\n        ref: 'suggestions',\n        datalistMessage: datalistMessage,\n        filtered: filtered,\n        focusedIndex: focusedIndex,\n        getItemKey: this._getItemKey,\n        isSelectedItem: this._isSelectedItem,\n        items: items,\n        labelledBy: toggleId,\n        onClose: this._handleMenuClose,\n        onDatalistMessageSelect: onDatalistMessageSelect,\n        onDisableFilter: this._handleShowAll,\n        onSelect: this._handleItemSelect,\n        open: open,\n        renderItem: this._renderSuggested\n      });\n    }\n  }, {\n    key: '_allowItem',\n    value: function _allowItem(item) {\n      var _this4 = this;\n\n      if (this.props.allowDuplicates) {\n        return true;\n      }\n\n      var value = this._itemAdapter.getInputValue(item);\n\n      return !this.state.selectedItems.find(function (i) {\n        return _this4._itemAdapter.getInputValue(i) === value;\n      });\n    } // autobind\n\n  }, {\n    key: '_getItemKey',\n    value: function _getItemKey(item) {\n      return this._itemAdapter.getReactKey(item);\n    } // autobind\n\n  }, {\n    key: '_isSelectedItem',\n    value: function _isSelectedItem(item) {\n      return this._itemAdapter.itemMatchesInput(item, this._foldedInputValue);\n    } // autobind\n\n  }, {\n    key: '_renderSuggested',\n    value: function _renderSuggested(item) {\n      return this._itemAdapter.renderSuggested(item);\n    } // autobind\n\n  }, {\n    key: '_handleToggleClick',\n    value: function _handleToggleClick() {\n      this._toggleOpen('click', this.props);\n    } // autobind\n\n  }, {\n    key: '_handleInputChange',\n    value: function _handleInputChange(event) {\n      var _this5 = this;\n\n      var _ref2 = event.target,\n          value = _ref2.value; // prevent auto-complete on backspace/delete/copy/paste/etc.\n\n      var allowAutoComplete = this._keyPressCount > this.state.inputValueKeyPress;\n\n      if (allowAutoComplete && value) {\n        if (this._autoCompleteAfterRender) {\n          this._setValueMeta();\n\n          this._setInputValue(value, function () {\n            _this5._checkAutoComplete(value, _this5.props);\n          });\n        } else if (!this._checkAutoComplete(value, this.props)) {\n          this._setValueMeta();\n\n          this._setInputValue(value);\n        }\n      } else {\n        this._setValueMeta();\n\n        this._setInputValue(value);\n      } // suppress onSearch if can't auto-complete and not open\n\n\n      if (allowAutoComplete || this.state.open) {\n        var _onSearch = this.props.onSearch;\n\n        if (_onSearch) {\n          clearTimeout(this._searchTimeoutId);\n          this._searchTimeoutId = setTimeout(function () {\n            _this5._searchTimeoutId = null;\n\n            if (value != _this5.state.searchValue) {\n              _this5.setState({\n                searchValue: value\n              });\n\n              _onSearch(value);\n            }\n          }, this.props.searchDebounce);\n        }\n      }\n    }\n  }, {\n    key: '_checkAutoComplete',\n    value: function _checkAutoComplete(value, props) {\n      var _this6 = this; // open dropdown if any items would be included\n\n\n      var valueUpdated = false;\n      var datalist = props.datalist;\n\n      var foldedValue = this._itemAdapter.foldValue(value);\n\n      var includedItems = this._listAdapter.filter(datalist, function (i) {\n        return _this6._itemAdapter.itemIncludedByInput(i, foldedValue) && _this6._allowItem(i);\n      });\n\n      if (includedItems.length > 0) {\n        // if only one item is included and the value must come from the list,\n        // autocomplete using that item\n        var _datalistOnly = props.datalistOnly,\n            _datalistPartial = props.datalistPartial;\n\n        if (includedItems.length === 1 && _datalistOnly && !_datalistPartial) {\n          var found = includedItems[0];\n\n          var foundValue = this._itemAdapter.getInputValue(found);\n\n          var callback = void 0;\n          var _inputSelect = props.inputSelect;\n\n          if (value != foundValue && _inputSelect && this._itemAdapter.foldValue(foundValue).startsWith(foldedValue)) {\n            var _input = this.refs.input;\n\n            callback = function callback() {\n              _inputSelect(_input, value, foundValue);\n            };\n          }\n\n          this._setValueMeta(found);\n\n          this._setInputValue(foundValue, callback);\n\n          valueUpdated = true;\n\n          if (this.state.open ? props.closeOnCompletion : value != foundValue && !props.closeOnCompletion) {\n            this._toggleOpen('autocomplete', props);\n          }\n        } else {\n          // otherwise, just check if any values match, and select the first one\n          // (without modifying the input value)\n          var _found = includedItems.find(function (i) {\n            return _this6._itemAdapter.itemMatchesInput(i, foldedValue);\n          });\n\n          if (_found) {\n            this._setValueMeta(_found);\n\n            this._setInputValue(value);\n\n            valueUpdated = true;\n          } // open dropdown unless exactly one matching value was found\n\n\n          if (!this.state.open && (!_found || includedItems.length > 1)) {\n            this._open('autocomplete', props);\n          }\n        }\n      }\n\n      return valueUpdated;\n    } // autobind\n\n  }, {\n    key: '_handleItemSelect',\n    value: function _handleItemSelect(item) {\n      if (this.props.multiple) {\n        this._addItem(item);\n      } else {\n        var itemValue = this._itemAdapter.getInputValue(item);\n\n        this._setValueMeta(item);\n\n        this._setInputValue(itemValue);\n      }\n\n      this._close();\n    }\n  }, {\n    key: '_addItem',\n    value: function _addItem(item) {\n      if (this._allowItem(item)) {\n        var _selectedItems3 = [].concat(_toConsumableArray(this.state.selectedItems), [item]);\n\n        this.setState({\n          selectedItems: _selectedItems3\n        });\n        var _props2 = this.props,\n            _onAdd = _props2.onAdd,\n            _onChange2 = _props2.onChange;\n\n        if (_onAdd) {\n          _onAdd(item);\n        }\n\n        if (_onChange2) {\n          _onChange2(_selectedItems3);\n        }\n      }\n\n      this._clearInput();\n\n      if (this.state.open) {\n        this._close();\n      }\n    } // autobind\n\n  }, {\n    key: '_removeItem',\n    value: function _removeItem(index) {\n      var previousItems = this.state.selectedItems;\n      var selectedItems = previousItems.slice(0, index).concat(previousItems.slice(index + 1));\n      this.setState({\n        selectedItems: selectedItems\n      });\n      var _props3 = this.props,\n          onRemove = _props3.onRemove,\n          onChange = _props3.onChange;\n\n      if (onRemove) {\n        onRemove(index);\n      }\n\n      if (onChange) {\n        onChange(selectedItems);\n      }\n    }\n  }, {\n    key: '_addInputValue',\n    value: function _addInputValue() {\n      if (this._inputItem) {\n        this._addItem(this._inputItem);\n\n        return true;\n      }\n\n      return false;\n    } // autobind\n\n  }, {\n    key: '_handleShowAll',\n    value: function _handleShowAll() {\n      this.setState({\n        disableFilter: true\n      });\n    } // autobind\n\n  }, {\n    key: '_handleKeyDown',\n    value: function _handleKeyDown(event) {\n      if (this.props.disabled) return;\n\n      switch (event.keyCode || event.which) {\n        case _keycode2['default'].codes.down:\n        case _keycode2['default'].codes['page down']:\n          if (this.state.open) {\n            this.refs.suggestions.focusFirst();\n          } else if (this._canOpen()) {\n            this._open('keydown', this.props);\n          }\n\n          event.preventDefault();\n          break;\n\n        case _keycode2['default'].codes.left:\n        case _keycode2['default'].codes.backspace:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === 0) {\n            this.refs.choices.focusLast();\n            event.preventDefault();\n          }\n\n          break;\n\n        case _keycode2['default'].codes.right:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === this.state.inputValue.length) {\n            this.refs.choices.focusFirst();\n            event.preventDefault();\n          }\n\n          break;\n\n        case _keycode2['default'].codes.enter:\n          if (this.props.multiple && this.state.inputValue) {\n            event.preventDefault();\n\n            if (this._addInputValue()) {\n              break;\n            }\n          }\n\n          if (this.state.open && this.state.inputFocused) {\n            event.preventDefault();\n\n            if (this._pseudofocusedItem) {\n              this._handleItemSelect(this._pseudofocusedItem);\n            } else {\n              this._close();\n            }\n          }\n\n          break;\n\n        case _keycode2['default'].codes.esc:\n        case _keycode2['default'].codes.tab:\n          this._handleMenuClose(event);\n\n          break;\n      }\n    }\n  }, {\n    key: '_getCursorPosition',\n    value: function _getCursorPosition(input) {\n      var inputNode = _reactDom2['default'].findDOMNode(input); // istanbul ignore else\n\n\n      if (inputNode instanceof HTMLInputElement) {\n        return inputNode.selectionStart;\n      }\n    } // autobind\n\n  }, {\n    key: '_handleKeyPress',\n    value: function _handleKeyPress() {\n      ++this._keyPressCount;\n    } // autobind\n\n  }, {\n    key: '_handleMenuClose',\n    value: function _handleMenuClose() {\n      if (this.state.open) {\n        this._close();\n      }\n    } // autobind\n\n  }, {\n    key: '_handleInputFocus',\n    value: function _handleInputFocus() {\n      this.setState({\n        inputFocused: true\n      });\n    } // autobind\n\n  }, {\n    key: '_handleInputBlur',\n    value: function _handleInputBlur() {\n      this.setState({\n        inputFocused: false\n      });\n    } // autobind\n\n  }, {\n    key: '_handleFocus',\n    value: function _handleFocus() {\n      if (this._focusTimeoutId) {\n        clearTimeout(this._focusTimeoutId);\n        this._focusTimeoutId = null;\n      } else {\n        this._focused = true;\n        var _onFocus = this.props.onFocus;\n\n        if (_onFocus) {\n          var _value3 = this._getCurrentValue();\n\n          _onFocus(_value3);\n        }\n      }\n    } // autobind\n\n  }, {\n    key: '_handleBlur',\n    value: function _handleBlur() {\n      var _this7 = this;\n\n      this._focusTimeoutId = setTimeout(function () {\n        _this7._focusTimeoutId = null;\n        _this7._focused = false;\n        var inputValue = _this7.state.inputValue;\n        var onBlur = _this7.props.onBlur;\n\n        if (_this7.props.multiple) {\n          if (inputValue && !_this7._addInputValue()) {\n            _this7._clearInput();\n          }\n        } else if (inputValue != _this7._lastValidValue) {\n          // invoke onBlur after state change, rather than immediately\n          var callback = void 0;\n\n          if (onBlur) {\n            callback = function callback() {\n              var value = _this7._getCurrentValue();\n\n              onBlur(value);\n            };\n          } // restore last valid value/item\n\n\n          _this7._setValueMeta(_this7._lastValidItem, false, true, true);\n\n          _this7._setInputValue(_this7._lastValidValue, callback);\n\n          return;\n        }\n\n        if (onBlur) {\n          var _value4 = _this7._getCurrentValue();\n\n          onBlur(_value4);\n        }\n      }, 1);\n    }\n  }]);\n\n  return Autosuggest;\n}(_react2['default'].Component);\n\nAutosuggest.propTypes = {\n  /**\n   * Text or component appearing in the input group after the input element\n   * (and before any button specified in `buttonAfter`).\n   */\n  addonAfter: _propTypes2['default'].node,\n\n  /**\n    * Text or component appearing in the input group before the input element\n    * (and before any button specified in `buttonBefore`).\n    */\n  addonBefore: _propTypes2['default'].node,\n\n  /**\n   * Indicates whether duplicate values are allowed in `multiple` mode.\n   */\n  allowDuplicates: _propTypes2['default'].bool,\n\n  /**\n   * Specifies the size of the form group and its contained components.\n   * Leave undefined for normal/medium size.\n   */\n  bsSize: _propTypes2['default'].oneOf(['small', 'large']),\n\n  /**\n   * Button component appearing in the input group after the input element\n   * (and after any add-on specified in `addonAfter`).\n   */\n  buttonAfter: _propTypes2['default'].node,\n\n  /**\n   * Button component appearing in the input group before the input element\n   * (and after any add-on specified in `addonBefore`).\n   */\n  buttonBefore: _propTypes2['default'].node,\n\n  /**\n   * React component class used to render the selected items in multiple mode.\n   */\n  choicesClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n\n  /**\n   * Indicates whether the drop-down menu should be closed automatically when\n   * auto-completion occurs. By default, the menu will remain open, so the\n   * user can see any additional information about the selected item (such as\n   * a shorthand code that caused it to be selected).\n   */\n  closeOnCompletion: _propTypes2['default'].bool,\n\n  /**\n   * A collection of items (such as an array, object, or Map) used as\n   * auto-complete suggestions. Each item may have any type supported by the\n   * `itemAdapter`. The default item adapter has basic support for any\n   * non-null type: it will initially try to access item properties using the\n   * configured property names (`itemReactKeyPropName`, `itemSortKeyPropName`,\n   * and `itemValuePropName`), but will fall back to using the `toString`\n   * method to obtain these properties to support primitives and other object\n   * types.\n   *\n   * If `datalist` is undefined or null and `onSearch` is not, the datalist\n   * is assumed to be dynamically populated, and the drop-down toggle will be\n   * enabled and will trigger `onSearch` the first time it is clicked.\n   * Conversely, an empty `datalist` or undefined/null `onSearch` indicates\n   * that there are no auto-complete options.\n   */\n  datalist: _propTypes2['default'].any,\n\n  /**\n   * An instance of the ListAdapter class that provides datalist access\n   * methods required by this component.\n   */\n  datalistAdapter: _propTypes2['default'].object,\n\n  /**\n   * Message to be displayed at the end of the datalist. It can be used to\n   * indicate that data is being fetched asynchronously, that an error\n   * occurred fetching data, or that additional options can be requested.\n   * It behaves similarly to a menu item, except that it is not filtered or\n   * sorted and cannot be selected (except to invoke `onDatalistMessageSelect`).\n   * Changing this property to a different non-null value while the component\n   * is focused causes the drop-down menu to be opened, which is useful for\n   * reporting status, such as that options are being fetched or failed to be\n   * fetched.\n   */\n  datalistMessage: _propTypes2['default'].node,\n\n  /**\n   * Indicates that only values matching an item from the `datalist` property\n   * are considered valid. For search purposes, intermediate values of the\n   * underlying `input` element may not match while the component is focused,\n   * but any non-matching value will be replaced with the previous matching\n   * value when the component loses focus.\n   *\n   * Note that there are two cases where the current (valid) value may not\n   * correspond to an item in the datalist:\n   *\n   * - If the value was provided by the `value` or `defaultValue` property\n   *   and either `datalist` is undefined/null (as opposed to empty) or\n   *   `datalistPartial` is true, the value is assumed to be valid.\n   * - If `datalist` changes and `datalistPartial` is true, any previously\n   *   valid value is assumed to remain valid. (Conversely, if `datalist`\n   *   changes and `datalistPartial` is false, a previously valid value will\n   *   be invalidated if not in the new `datalist`.)\n   */\n  datalistOnly: _propTypes2['default'].bool,\n\n  /**\n   * Indicates that the `datalist` property should be considered incomplete\n   * for validation purposes. Specifically, if both `datalistPartial` and\n   * `datalistOnly` are true, changes to the `datalist` will not render\n   * invalid a value that was previously valid. This is useful in cases where\n   * a partial datalist is obtained dynamically in response to the `onSearch`\n   * callback.\n   */\n  datalistPartial: _propTypes2['default'].bool,\n\n  /**\n   * Initial value to be rendered when used as an\n   * [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)\n   * (i.e. no `value` property is supplied).\n   */\n  defaultValue: _propTypes2['default'].any,\n\n  /**\n   * Indicates whether the form group is disabled, which causes all of its\n   * contained elements to ignore input and focus events and to be displayed\n   * grayed out.\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * Indicates whether the suggestion list should drop up instead of down.\n   *\n   * Note that currently a drop-up list extending past the top of the page is\n   * clipped, rendering the clipped items inaccessible, whereas a drop-down\n   * list will extend the page and allow scrolling as necessary.\n   */\n  dropup: _propTypes2['default'].bool,\n\n  /**\n   * Custom class name applied to the input group.\n   */\n  groupClassName: _propTypes2['default'].string,\n\n  /**\n   * Function used to select a portion of the input value when auto-completion\n   * occurs. The default implementation selects just the auto-completed\n   * portion, which is equivalent to:\n   *\n   * ```js\n   *   defaultInputSelect(input, value, completion) {\n   *     input.setSelectionRange(value.length, completion.length)\n   *   }\n   * ```\n   */\n  inputSelect: _propTypes2['default'].func,\n\n  /**\n   * An instance of the ItemAdapter class that provides the item access\n   * methods required by this component.\n   */\n  itemAdapter: _propTypes2['default'].object,\n\n  /**\n   * Name of the item property used for the React component key. If this\n   * property is not defined, `itemValuePropName` is used instead. If neither\n   * property is defined, `toString()` is called on the item.\n   */\n  itemReactKeyPropName: _propTypes2['default'].string,\n\n  /**\n   * Name of the item property used for sorting items. If this property is not\n   * defined, `itemValuePropName` is used instead. If neither property is\n   * defined, `toString()` is called on the item.\n   */\n  itemSortKeyPropName: _propTypes2['default'].string,\n\n  /**\n   * Name of item property used for the input element value. If this property\n   * is not defined, `toString()` is called on the item.\n   */\n  itemValuePropName: _propTypes2['default'].string,\n\n  /**\n   * Enables selection of multiple items. The value property should be an\n   * array of items.\n   */\n  multiple: _propTypes2['default'].bool,\n\n  /**\n   * Callback function called whenever a new value should be appended to the\n   * array of values in `multiple` mode. The sole argument is the added item.\n   */\n  onAdd: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever the input focus leaves this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onBlur: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever the input value changes to a different\n   * valid value. Validity depends on properties such as `datalistOnly`,\n   * `valueIsItem`, and `required`. The sole argument is current value:\n   *\n   * - If `multiple` is enabled, the current value is an array of selected\n   *   items.\n   * - If `valueIsItem` is enabled, the current value is the selected\n   *   datalist item.\n   * - Otherwise, the current value is the `input` element value. Note that\n   *   if `datalistOnly` or `required` are enabled, only valid values trigger\n   *   a callback.\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever the datalist item created for\n   * `datalistMessage` is selected. If this property is null, the associated\n   * item is displayed as disabled.\n   */\n  onDatalistMessageSelect: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever the input focus enters this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onFocus: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever a value should be removed from the\n   * array of values in `multiple` mode. The sole argument is the index of\n   * the value to remove.\n   */\n  onRemove: _propTypes2['default'].func,\n\n  /**\n   * Callback function called periodically when the `input` element value has\n   * changed. The sole argument is the current value of the `input` element.\n   * This callback can be used to dynamically populate the `datalist` based on\n   * the input value so far, e.g. with values obtained from a remote service.\n   * Once changed, the value must then remain unchanged for `searchDebounce`\n   * milliseconds before the function will be called. No two consecutive\n   * invocations of the function will be passed the same value (i.e. changing\n   * and then restoring the value within the debounce interval is not\n   * considered a change). Note also that the callback can be invoked with an\n   * empty string, if the user clears the `input` element; this implies that\n   * any minimum search string length should be imposed by the function.\n   */\n  onSearch: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever an item from the suggestion list is\n   * selected (regardless of whether it is clicked or typed). The sole\n   * argument is the selected item.\n   */\n  onSelect: _propTypes2['default'].func,\n\n  /**\n   * Callback function called whenever the drop-down list of suggestions is\n   * opened or closed. The sole argument is a boolean value indicating whether\n   * the list is open.\n   */\n  onToggle: _propTypes2['default'].func,\n\n  /**\n   * Placeholder text propagated to the underlying `input` element (when\n   * `multiple` is false or no items have been selected).\n   */\n  placeholder: _propTypes2['default'].string,\n\n  /**\n   * `required` property passed to the `input` element (when `multiple` is\n   * false or no items have been selected).\n   */\n  required: _propTypes2['default'].bool,\n\n  /**\n   * The number of milliseconds that must elapse between the last change to\n   * the `input` element value and a call to `onSearch`. The default is 250.\n   */\n  searchDebounce: _propTypes2['default'].number,\n\n  /**\n   * Indicates whether to show the drop-down toggle. If set to `auto`, the\n   * toggle is shown only when the `datalist` is non-empty or dynamic.\n   */\n  showToggle: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].oneOf(['auto'])]),\n\n  /**\n   * React component class used to render the drop-down list of suggestions.\n   */\n  suggestionsClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n\n  /**\n   * ID supplied to the drop-down toggle and used by the drop-down menu to\n   * refer to it.\n   */\n  toggleId: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n\n  /**\n   * `type` property supplied to the contained `input` element. Only textual\n   * types should be specified, such as `text`, `search`, `email`, `tel`, or\n   * perhaps `number`. Note that the browser may supply additional UI elements\n   * for some types (e.g. increment/decrement buttons for `number`) that may\n   * need additional styling or may interfere with UI elements supplied by\n   * this component.\n   */\n  type: _propTypes2['default'].string,\n\n  /**\n   * The value to be rendered by the component. If unspecified, the component\n   * behaves like an [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components).\n   */\n  value: _propTypes2['default'].any,\n\n  /**\n   * Indicates that the `value` property should be interpreted as a datalist\n   * item, as opposed to the string value of the underlying `input` element.\n   * When false (the default), the `value` property (if specified) is\n   * expected to be a string and corresponds (indirectly) to the `value`\n   * property of the underlying `input` element. When true, the `value`\n   * property is expected to be a datalist item whose display value (as\n   * provided by the `itemAdapter`) is used as the `input` element value.\n   * This property also determines whether the argument to the `onChange`\n   * callback is the `input` value or a datalist item.\n   *\n   * Note that unless `datalistOnly` is also true, items may also be created\n   * dynamically using the `newFromValue` method of the `itemAdapter`.\n   *\n   * Also note that this property is ignored if `multiple` is true; in that\n   * case, the `value` property and `onChange` callback argument are\n   * implicitly an array of datalist items.\n   */\n  valueIsItem: _propTypes2['default'].bool\n};\nAutosuggest.contextTypes = {\n  $bs_formGroup: _propTypes2['default'].object\n};\nAutosuggest.defaultProps = {\n  closeOnCompletion: false,\n  datalistOnly: false,\n  datalistPartial: false,\n  disabled: false,\n  dropup: false,\n  inputSelect: Autosuggest.defaultInputSelect,\n  multiple: false,\n  itemReactKeyPropName: 'key',\n  itemSortKeyPropName: 'sortKey',\n  itemValuePropName: 'value',\n  searchDebounce: 250,\n  showToggle: 'auto',\n  type: 'text',\n  valueIsItem: false\n};\nexports['default'] = Autosuggest;","map":{"version":3,"sources":["D:/Laksura_Project/backend/frontend/node_modules/react-bootstrap-autosuggest/lib/Autosuggest.js"],"names":["Object","defineProperty","exports","value","ObjectListAdapter","MapListAdapter","ArrayListAdapter","EmptyListAdapter","ListAdapter","ItemAdapter","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_classnames","require","_classnames2","_interopRequireDefault","_shallowEqual","_shallowEqual2","_keycode","_keycode2","_propTypes","_propTypes2","_react","_react2","_reactBootstrap","_reactDom","_reactDom2","_warning","_warning2","_Choices","_Choices2","_Suggestions","_Suggestions2","_ItemAdapter","_ItemAdapter2","_ListAdapter","_ListAdapter2","_EmptyListAdapter","_EmptyListAdapter2","_ArrayListAdapter","_ArrayListAdapter2","_MapListAdapter","_MapListAdapter2","_ObjectListAdapter","_ObjectListAdapter2","obj","__esModule","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Autosuggest","_React$Component","defaultInputSelect","input","completion","type","setSelectionRange","createTextRange","range","moveEnd","moveStart","select","_ref","_len","args","_key","_this","getPrototypeOf","apply","concat","_itemAdapter","itemAdapter","receiveProps","_listAdapter","datalistAdapter","_getListAdapter","datalist","_this$_getValueFromPr","_getValueFromProps","inputValue","inputItem","inputItemEphemeral","selectedItems","_setValueMeta","_lastValidItem","_lastValidValue","_keyPressCount","state","open","disableFilter","inputValueKeyPress","inputFocused","searchValue","_lastOnChangeValue","_getCurrentValue","_lastOnSelectValue","_renderSelected","bind","_getItemKey","_isSelectedItem","_renderSuggested","_handleToggleClick","_handleInputChange","_handleItemSelect","_removeItem","_handleShowAll","_handleKeyDown","_handleKeyPress","_handleMenuClose","_handleInputFocus","_handleInputBlur","_handleFocus","_handleBlur","list","Map","Error","defaultValue","multiple","_filterItems","valueIsItem","itemValue","getInputValue","findMatching","datalistOnly","datalistPartial","_warnInvalidValue","toString","newFromValue","items","allowDuplicates","result","valueSet","different","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","_item","_value","listItem","push","err","_setInputValue","callback","setState","isValid","validated","_inputItem","_inputItemEphemeral","_valueIsValid","_valueWasValidated","_clearInput","_getValueUsing","componentDidMount","_autoCompleteAfterRender","refs","componentWillReceiveProps","nextProps","listAdapter","nextValue","valueChanged","inputValueInvalid","propsValueInvalid","validateSelected","canValidate","validationChanged","_focused","_selectedItems","_getValueFromProps2","_checkAutoComplete","_selectedItems2","datalistMessage","_open","shouldComponentUpdate","nextState","componentWillUpdate","suggestions","_menuFocusedBeforeUpdate","isFocused","nextInputValue","required","_multiple","_onChange","onChange","_value2","_onSelect","onSelect","onToggle","componentDidUpdate","prevProps","prevState","_lastOpenEventType","focusFirst","_focusInput","componentWillUnmount","clearTimeout","_focusTimeoutId","_searchTimeoutId","findDOMNode","HTMLElement","focus","eventType","_hasNoOrExactMatch","onSearch","_state","_close","_toggleOpen","_canOpen","isEmpty","_this2","foldedValue","foldValue","find","item","itemIncludedByInput","render","showToggle","toggleCanOpen","toggleVisible","classes","autosuggest","disabled","dropdown","dropup","createElement","className","onFocus","onBlur","_renderInputGroup","_renderMenu","addonBefore","addonAfter","buttonBefore","toggle","_renderToggle","buttonAfter","bsSize","_renderChoices","canOpen","Dropdown","Toggle","ref","id","toggleId","onClick","onKeyDown","_props$choicesClass","choicesClass","ChoicesClass","autoHeight","focused","onKeyPress","onRemove","renderItem","_renderInput","renderSelected","formGroup","context","$bs_formGroup","controlId","extraProps","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","keys","_step2","propTypes","noneSelected","autoComplete","placeholder","_this3","_pseudofocusedItem","_foldedInputValue","toArray","filter","_allowItem","sortItems","filtered","getLength","focusedIndex","_props","_props$suggestionsCla","suggestionsClass","SuggestionsClass","onDatalistMessageSelect","getItemKey","isSelectedItem","labelledBy","onClose","onDisableFilter","_this4","getReactKey","itemMatchesInput","renderSuggested","event","_this5","_ref2","allowAutoComplete","_onSearch","setTimeout","searchDebounce","_this6","valueUpdated","includedItems","_datalistOnly","_datalistPartial","found","foundValue","_inputSelect","inputSelect","startsWith","_input","closeOnCompletion","_found","_addItem","_selectedItems3","_props2","_onAdd","onAdd","_onChange2","index","previousItems","slice","_props3","_addInputValue","keyCode","which","codes","down","preventDefault","left","backspace","choices","_getCursorPosition","focusLast","right","enter","esc","tab","inputNode","HTMLInputElement","selectionStart","_onFocus","_value3","_this7","_value4","Component","node","bool","oneOf","oneOfType","func","string","any","object","groupClassName","itemReactKeyPropName","itemSortKeyPropName","itemValuePropName","number","contextTypes","defaultProps"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectListAdapter = exports.MapListAdapter = exports.ArrayListAdapter = exports.EmptyListAdapter = exports.ListAdapter = exports.ItemAdapter = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _keycode = require('keycode');\n\nvar _keycode2 = _interopRequireDefault(_keycode);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = require('react-bootstrap');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _Choices = require('./Choices');\n\nvar _Choices2 = _interopRequireDefault(_Choices);\n\nvar _Suggestions = require('./Suggestions');\n\nvar _Suggestions2 = _interopRequireDefault(_Suggestions);\n\nvar _ItemAdapter = require('./ItemAdapter');\n\nvar _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);\n\nvar _ListAdapter = require('./ListAdapter');\n\nvar _ListAdapter2 = _interopRequireDefault(_ListAdapter);\n\nvar _EmptyListAdapter = require('./EmptyListAdapter');\n\nvar _EmptyListAdapter2 = _interopRequireDefault(_EmptyListAdapter);\n\nvar _ArrayListAdapter = require('./ArrayListAdapter');\n\nvar _ArrayListAdapter2 = _interopRequireDefault(_ArrayListAdapter);\n\nvar _MapListAdapter = require('./MapListAdapter');\n\nvar _MapListAdapter2 = _interopRequireDefault(_MapListAdapter);\n\nvar _ObjectListAdapter = require('./ObjectListAdapter');\n\nvar _ObjectListAdapter2 = _interopRequireDefault(_ObjectListAdapter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.ItemAdapter = _ItemAdapter2['default'];\nexports.ListAdapter = _ListAdapter2['default'];\nexports.EmptyListAdapter = _EmptyListAdapter2['default'];\nexports.ArrayListAdapter = _ArrayListAdapter2['default'];\nexports.MapListAdapter = _MapListAdapter2['default'];\nexports.ObjectListAdapter = _ObjectListAdapter2['default'];\n\n/**\n * Combo-box input component that combines a drop-down list and a single-line\n * editable text box. The set of options for the drop-down list can be\n * controlled dynamically. Selection of multiple items is supported using a\n * tag/pill-style user interface within a simulated text box.\n */\nvar Autosuggest = function (_React$Component) {\n  _inherits(Autosuggest, _React$Component);\n\n  _createClass(Autosuggest, null, [{\n    key: 'defaultInputSelect',\n    value: function defaultInputSelect(input, value, completion) {\n      // https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n      switch (input.type) {\n        case 'text':\n        case 'search':\n        case 'url':\n        case 'tel':\n        case 'password':\n          // istanbul ignore else\n          if (input.setSelectionRange) {\n            input.setSelectionRange(value.length, completion.length);\n          } else if (input.createTextRange) {\n            // old IE\n            var range = input.createTextRange();\n            range.moveEnd('character', completion.length);\n            range.moveStart('character', value.length);\n            range.select();\n          }\n      }\n    }\n  }]);\n\n  function Autosuggest(props) {\n    var _ref;\n\n    _classCallCheck(this, Autosuggest);\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    /* istanbul ignore next: https://github.com/gotwarlost/istanbul/issues/690#issuecomment-265718617 */\n    var _this = _possibleConstructorReturn(this, (_ref = Autosuggest.__proto__ || Object.getPrototypeOf(Autosuggest)).call.apply(_ref, [this, props].concat(_toConsumableArray(args))));\n\n    _this._itemAdapter = props.itemAdapter || new _ItemAdapter2['default']();\n    _this._itemAdapter.receiveProps(props);\n\n    _this._listAdapter = props.datalistAdapter || _this._getListAdapter(props.datalist);\n    _this._listAdapter.receiveProps(props, _this._itemAdapter);\n\n    var _this$_getValueFromPr = _this._getValueFromProps(props),\n        inputValue = _this$_getValueFromPr.inputValue,\n        inputItem = _this$_getValueFromPr.inputItem,\n        inputItemEphemeral = _this$_getValueFromPr.inputItemEphemeral,\n        selectedItems = _this$_getValueFromPr.selectedItems;\n\n    _this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n    _this._lastValidItem = inputItem;\n    _this._lastValidValue = inputValue;\n    _this._keyPressCount = 0;\n\n    _this.state = {\n      open: false,\n      disableFilter: false,\n      inputValue: inputValue,\n      inputValueKeyPress: 0,\n      inputFocused: false,\n      selectedItems: selectedItems,\n      searchValue: null\n    };\n    _this._lastOnChangeValue = _this._getCurrentValue();\n    _this._lastOnSelectValue = inputItem;\n\n    var self = _this; // https://github.com/facebook/flow/issues/1517\n    self._renderSelected = _this._renderSelected.bind(_this);\n    self._getItemKey = _this._getItemKey.bind(_this);\n    self._isSelectedItem = _this._isSelectedItem.bind(_this);\n    self._renderSuggested = _this._renderSuggested.bind(_this);\n    self._handleToggleClick = _this._handleToggleClick.bind(_this);\n    self._handleInputChange = _this._handleInputChange.bind(_this);\n    self._handleItemSelect = _this._handleItemSelect.bind(_this);\n    self._removeItem = _this._removeItem.bind(_this);\n    self._handleShowAll = _this._handleShowAll.bind(_this);\n    self._handleKeyDown = _this._handleKeyDown.bind(_this);\n    self._handleKeyPress = _this._handleKeyPress.bind(_this);\n    self._handleMenuClose = _this._handleMenuClose.bind(_this);\n    self._handleInputFocus = _this._handleInputFocus.bind(_this);\n    self._handleInputBlur = _this._handleInputBlur.bind(_this);\n    self._handleFocus = _this._handleFocus.bind(_this);\n    self._handleBlur = _this._handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Autosuggest, [{\n    key: '_getListAdapter',\n    value: function _getListAdapter(list) {\n      if (list == null) {\n        return new _EmptyListAdapter2['default']();\n      } else if (Array.isArray(list)) {\n        return new _ArrayListAdapter2['default']();\n      } else if (list instanceof Map) {\n        return new _MapListAdapter2['default']();\n      } else if (typeof list === 'object') {\n        return new _ObjectListAdapter2['default']();\n      } else {\n        throw Error('Unexpected datalist type: datalistAdapter required');\n      }\n    }\n  }, {\n    key: '_getValueFromProps',\n    value: function _getValueFromProps(props) {\n      var inputValue = '';\n      var inputItem = null;\n      var inputItemEphemeral = false;\n      var selectedItems = [];\n      var value = props.value || props.defaultValue;\n      if (value != null) {\n        if (props.multiple) {\n          if (Array.isArray(value)) {\n            selectedItems = this._filterItems(value, props);\n          } else {\n            (0, _warning2['default'])(!value, 'Array expected for value property');\n          }\n        } else if (props.valueIsItem) {\n          var itemValue = this._itemAdapter.getInputValue(value);\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, itemValue);\n            if (inputItem != null) {\n              inputValue = inputItem === value ? itemValue : this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = itemValue;\n              inputItem = value;\n            }\n          } else {\n            inputValue = itemValue;\n            inputItem = value;\n          }\n        } else if (value) {\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, value);\n            if (inputItem != null) {\n              inputValue = this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = value.toString();\n              inputItem = this._itemAdapter.newFromValue(value);\n              inputItemEphemeral = true;\n            }\n          } else {\n            inputValue = value.toString();\n            inputItem = this._itemAdapter.newFromValue(value);\n            inputItemEphemeral = true;\n          }\n        }\n      }\n      return { inputValue: inputValue, inputItem: inputItem, inputItemEphemeral: inputItemEphemeral, selectedItems: selectedItems };\n    }\n  }, {\n    key: '_filterItems',\n    value: function _filterItems(items, props) {\n      if (props.datalist != null || !props.allowDuplicates) {\n        var result = [];\n        var valueSet = {};\n        var different = false;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _item = _step.value;\n\n            var _value = this._itemAdapter.getInputValue(_item);\n            if (!props.allowDuplicates && valueSet[_value]) {\n              different = true;\n              continue;\n            }\n            var listItem = this._listAdapter.findMatching(props.datalist, _value);\n            if (listItem != null) {\n              result.push(listItem);\n              valueSet[_value] = true;\n              different = true;\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(_value);\n              different = true;\n            } else {\n              result.push(_item);\n              valueSet[_value] = true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (different) {\n          return result;\n        }\n      }\n      return items;\n    }\n  }, {\n    key: '_warnInvalidValue',\n    value: function _warnInvalidValue(value) {\n      (0, _warning2['default'])(false, 'Value \"%s\" does not match any datalist value', value);\n    }\n  }, {\n    key: '_setInputValue',\n    value: function _setInputValue(value, callback) {\n      // track keypress count in state so re-render is forced even if value is\n      // unchanged; this is necessary when typing over the autocompleted range\n      // with matching characters to properly maintain the input selection range\n      this.setState({\n        inputValue: value,\n        inputValueKeyPress: this._keyPressCount\n      }, callback);\n    }\n  }, {\n    key: '_setValueMeta',\n    value: function _setValueMeta(inputItem) {\n      var inputItemEphemeral = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : inputItem != null;\n      var validated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isValid;\n\n      this._inputItem = inputItem;\n      this._inputItemEphemeral = inputItemEphemeral;\n      this._valueIsValid = isValid;\n      this._valueWasValidated = validated;\n    }\n  }, {\n    key: '_clearInput',\n    value: function _clearInput() {\n      this._setValueMeta(null, false, true, true);\n      this._setInputValue('');\n    }\n  }, {\n    key: '_getValueUsing',\n    value: function _getValueUsing(props, inputValue, inputItem, selectedItems) {\n      return props.multiple ? selectedItems : props.valueIsItem ? inputItem : inputValue;\n    }\n  }, {\n    key: '_getCurrentValue',\n    value: function _getCurrentValue() {\n      return this._getValueUsing(this.props, this.state.inputValue, this._inputItem, this.state.selectedItems);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // IE8 can jump cursor position if not immediately updated to typed value;\n      // for other browsers, we can avoid re-rendering for the auto-complete\n      this._autoCompleteAfterRender = !this.refs.input.setSelectionRange;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.itemAdapter != this.props.itemAdapter) {\n        this._itemAdapter = nextProps.itemAdapter || new _ItemAdapter2['default']();\n      }\n      this._itemAdapter.receiveProps(nextProps);\n\n      if (nextProps.datalist != this.props.datalist || nextProps.datalistAdapter != this.props.datalistAdapter) {\n        if (nextProps.datalistAdapter) {\n          this._listAdapter = nextProps.datalistAdapter;\n        } else {\n          var listAdapter = this._getListAdapter(nextProps.datalist);\n          if (listAdapter.constructor != this._listAdapter.constructor) {\n            this._listAdapter = listAdapter;\n          }\n        }\n      }\n      this._listAdapter.receiveProps(nextProps, this._itemAdapter);\n\n      // if props.value changes (to a value other than the current state), or\n      // validation changes to make state invalid, propagate props.value to state\n      var nextValue = nextProps.value;\n      var inputValue = this.state.inputValue;\n\n      var valueChanged = nextValue !== this.props.value && nextValue !== this._getValueUsing(nextProps, inputValue, this._inputItem, this.state.selectedItems);\n      var inputItem = void 0,\n          inputValueInvalid = void 0,\n          propsValueInvalid = void 0,\n          validateSelected = void 0;\n      if (!valueChanged) {\n        if (nextProps.datalistOnly) {\n          var canValidate = !nextProps.datalistPartial && nextProps.datalist != null;\n          var validationChanged = !this.props.datalistOnly || !nextProps.datalistPartial && this.props.datalistPartial || nextProps.datalist != this.props.datalist;\n          if (inputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, inputValue);\n            if (inputItem == null) {\n              if (!canValidate && !this._inputItemEphemeral) {\n                inputItem = this._inputItem;\n              } else if (this._inputItemEphemeral && nextValue === inputValue) {\n                propsValueInvalid = true;\n              }\n            }\n            inputValueInvalid = inputItem == null && validationChanged;\n            // update metadata but don't reset input value if invalid but focused\n            if (inputValueInvalid && this._focused) {\n              this._setValueMeta(null, false, false, true);\n              if (validationChanged && canValidate && this._lastValidItem != null) {\n                // revalidate last valid item, which will be restored on blur\n                this._lastValidItem = this._listAdapter.findMatching(nextProps.datalist, this._lastValidValue);\n                if (this._lastValidItem == null) {\n                  this._lastValidValue = '';\n                }\n              }\n              inputValueInvalid = false;\n            }\n          } else {\n            inputItem = null;\n            inputValueInvalid = false;\n          }\n          validateSelected = nextProps.multiple && canValidate && validationChanged;\n        }\n        if (nextProps.multiple && !nextProps.allowDuplicates && this.props.allowDuplicates) {\n          validateSelected = true;\n        }\n      }\n      // inputValueInvalid implies !multiple, since inputValue of multiple should\n      // be blank when not focused\n      if (valueChanged || inputValueInvalid) {\n        var inputItemEphemeral = void 0,\n            _selectedItems = void 0;\n        if (propsValueInvalid) {\n          inputValue = '';\n          inputItemEphemeral = false;\n          _selectedItems = [];\n        } else {\n          var _getValueFromProps2 = this._getValueFromProps(nextProps);\n\n          inputValue = _getValueFromProps2.inputValue;\n          inputItem = _getValueFromProps2.inputItem;\n          inputItemEphemeral = _getValueFromProps2.inputItemEphemeral;\n          _selectedItems = _getValueFromProps2.selectedItems;\n        }\n        // if props.value change resolved to current state item, don't reset input\n        if (inputItem !== this._inputItem || !this._focused) {\n          this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n          this._setInputValue(inputValue);\n          this.setState({ selectedItems: _selectedItems });\n          validateSelected = false;\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputValue;\n          // suppress onChange (but not onSelect) if value came from props\n          if (valueChanged) {\n            this._lastOnChangeValue = this._getValueUsing(nextProps, inputValue, inputItem, _selectedItems);\n          }\n        } else if (valueChanged && nextProps.multiple) {\n          this.setState({ selectedItems: _selectedItems });\n        }\n      } else if (inputValue && nextProps.datalist != this.props.datalist && this._focused) {\n        // if datalist changed but value didn't, attempt to autocomplete\n        this._checkAutoComplete(inputValue, nextProps);\n      }\n      if (validateSelected) {\n        var _selectedItems2 = this._filterItems(this.state.selectedItems, nextProps);\n        this.setState({ selectedItems: _selectedItems2 });\n      }\n\n      // open dropdown if datalist message is set while focused\n      if (nextProps.datalistMessage && nextProps.datalistMessage != this.props.datalistMessage && this._focused) {\n        this._open('message', nextProps);\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      var suggestions = this.refs.suggestions;\n\n      this._menuFocusedBeforeUpdate = suggestions && suggestions.isFocused();\n\n      var nextInputValue = nextState.inputValue;\n      if (nextInputValue != this.state.inputValue) {\n        var inputItem = void 0,\n            inputItemEphemeral = void 0,\n            isValid = void 0;\n        if (!this._valueWasValidated) {\n          if (nextInputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, nextInputValue);\n            if (inputItem == null && !nextProps.datalistOnly) {\n              inputItem = this._itemAdapter.newFromValue(nextInputValue);\n              inputItemEphemeral = true;\n              isValid = true;\n            } else {\n              inputItemEphemeral = false;\n              isValid = inputItem != null;\n            }\n          } else {\n            inputItem = null;\n            inputItemEphemeral = false;\n            isValid = !nextProps.required;\n          }\n          this._setValueMeta(inputItem, inputItemEphemeral, isValid);\n        } else {\n          inputItem = this._inputItem;\n          isValid = this._valueIsValid;\n        }\n        if (isValid) {\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputItem && !inputItemEphemeral ? this._itemAdapter.getInputValue(inputItem) : nextInputValue;\n        }\n\n        if (isValid) {\n          var _multiple = nextProps.multiple,\n              _onChange = nextProps.onChange;\n\n          if (!_multiple && _onChange) {\n            var _value2 = this._getValueUsing(nextProps, nextInputValue, inputItem, nextState.selectedItems);\n            if (_value2 !== this._lastOnChangeValue) {\n              this._lastOnChangeValue = _value2;\n              _onChange(_value2);\n            }\n          }\n\n          var _onSelect = nextProps.onSelect;\n\n          if (_onSelect && inputItem !== this._lastOnSelectValue) {\n            this._lastOnSelectValue = inputItem;\n            _onSelect(inputItem);\n          }\n        }\n      }\n\n      var onToggle = nextProps.onToggle;\n\n      if (onToggle && nextState.open != this.state.open) {\n        onToggle(nextState.open);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.open && !prevState.open && this._lastOpenEventType === 'keydown' || this.state.disableFilter && !prevState.disableFilter && this._menuFocusedBeforeUpdate) {\n        this.refs.suggestions.focusFirst();\n      } else if (!this.state.open && prevState.open) {\n        // closed\n        if (this._menuFocusedBeforeUpdate) {\n          this._menuFocusedBeforeUpdate = false;\n          this._focusInput();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this._focusTimeoutId);\n      this._focusTimeoutId = null;\n      clearTimeout(this._searchTimeoutId);\n      this._searchTimeoutId = null;\n    }\n  }, {\n    key: '_focusInput',\n    value: function _focusInput() {\n      var input = _reactDom2['default'].findDOMNode(this.refs.input);\n      // istanbul ignore else\n      if (input instanceof HTMLElement) {\n        input.focus();\n      }\n    }\n  }, {\n    key: '_open',\n    value: function _open(eventType, props) {\n      this._lastOpenEventType = eventType;\n      var disableFilter = eventType !== 'autocomplete' && this._hasNoOrExactMatch(props);\n      this.setState({ open: true, disableFilter: disableFilter });\n\n      var onSearch = props.onSearch;\n      var _state = this.state,\n          inputValue = _state.inputValue,\n          searchValue = _state.searchValue;\n\n      if (onSearch && searchValue !== inputValue) {\n        this.setState({ searchValue: inputValue });\n        onSearch(inputValue);\n      }\n    }\n  }, {\n    key: '_close',\n    value: function _close() {\n      this.setState({ open: false });\n    }\n  }, {\n    key: '_toggleOpen',\n    value: function _toggleOpen(eventType, props) {\n      if (this.state.open) {\n        this._close();\n      } else {\n        this._open(eventType, props);\n      }\n    }\n  }, {\n    key: '_canOpen',\n    value: function _canOpen() {\n      var datalist = this.props.datalist;\n\n      return datalist == null && this.props.onSearch || !this._listAdapter.isEmpty(datalist) || !!this.props.datalistMessage;\n    }\n  }, {\n    key: '_hasNoOrExactMatch',\n    value: function _hasNoOrExactMatch(props) {\n      var _this2 = this;\n\n      if (this._inputItem != null && !this._inputItemEphemeral) {\n        return true; // exact match\n      }\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n      return this._listAdapter.find(props.datalist, function (item) {\n        return _this2._itemAdapter.itemIncludedByInput(item, foldedValue);\n      }) == null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var showToggle = this.props.showToggle;\n\n      var toggleCanOpen = this._canOpen();\n      var toggleVisible = showToggle === 'auto' ? toggleCanOpen : showToggle;\n      var classes = {\n        autosuggest: true,\n        open: this.state.open,\n        disabled: this.props.disabled,\n        dropdown: toggleVisible && !this.props.dropup,\n        dropup: toggleVisible && this.props.dropup\n      };\n      return _react2['default'].createElement(\n        'div',\n        {\n          key: 'dropdown',\n          className: (0, _classnames2['default'])(classes),\n          onFocus: this._handleFocus,\n          onBlur: this._handleBlur },\n        this._renderInputGroup(toggleVisible, toggleCanOpen),\n        this._renderMenu()\n      );\n    }\n  }, {\n    key: '_renderInputGroup',\n    value: function _renderInputGroup(toggleVisible, toggleCanOpen) {\n      var addonBefore = this.props.addonBefore ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-addon', key: 'addonBefore' },\n        this.props.addonBefore\n      ) : null;\n\n      var addonAfter = this.props.addonAfter ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-addon', key: 'addonAfter' },\n        this.props.addonAfter\n      ) : null;\n\n      var buttonBefore = this.props.buttonBefore ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-btn' },\n        this.props.buttonBefore\n      ) : null;\n\n      // Bootstrap expects the dropdown toggle to be last,\n      // as it does not reset the right border radius for toggles:\n      // .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle)\n      // { @include border-right-radius(0); }\n      var toggle = toggleVisible && this._renderToggle(toggleCanOpen);\n      var buttonAfter = toggle || this.props.buttonAfter ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-btn' },\n        this.props.buttonAfter,\n        toggle\n      ) : null;\n\n      var classes = (0, _classnames2['default'])({\n        'input-group': addonBefore || addonAfter || buttonBefore || buttonAfter,\n        'input-group-sm': this.props.bsSize === 'small',\n        'input-group-lg': this.props.bsSize === 'large',\n        'input-group-toggle': !!toggle\n      });\n      return classes ? _react2['default'].createElement(\n        'div',\n        { className: classes, key: 'input-group' },\n        addonBefore,\n        buttonBefore,\n        this._renderChoices(),\n        addonAfter,\n        buttonAfter\n      ) : this._renderChoices();\n    }\n  }, {\n    key: '_renderToggle',\n    value: function _renderToggle(canOpen) {\n      return _react2['default'].createElement(_reactBootstrap.Dropdown.Toggle, {\n        ref: 'toggle',\n        key: 'toggle',\n        id: this.props.toggleId,\n        bsSize: this.props.bsSize,\n        disabled: this.props.disabled || !canOpen,\n        open: this.state.open,\n        onClick: this._handleToggleClick,\n        onKeyDown: this._handleKeyDown });\n    }\n  }, {\n    key: '_renderChoices',\n    value: function _renderChoices() {\n      if (this.props.multiple) {\n        var _props$choicesClass = this.props.choicesClass,\n            ChoicesClass = _props$choicesClass === undefined ? _Choices2['default'] : _props$choicesClass;\n\n        return _react2['default'].createElement(\n          ChoicesClass,\n          { ref: 'choices',\n            autoHeight: !this.props.showToggle && !this.props.addonAfter && !this.props.addonBefore && !this.props.buttonAfter && !this.props.buttonBefore,\n            disabled: this.props.disabled,\n            focused: this.state.inputFocused,\n            inputValue: this.state.inputValue,\n            items: this.state.selectedItems,\n            onKeyPress: this._handleKeyPress,\n            onRemove: this._removeItem,\n            renderItem: this._renderSelected },\n          this._renderInput()\n        );\n      }\n      return this._renderInput();\n    }\n\n    // autobind\n\n  }, {\n    key: '_renderSelected',\n    value: function _renderSelected(item) {\n      return this._itemAdapter.renderSelected(item);\n    }\n  }, {\n    key: '_renderInput',\n    value: function _renderInput() {\n      var formGroup = this.context.$bs_formGroup;\n      var controlId = formGroup && formGroup.controlId;\n      var extraProps = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Object.keys(this.props)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n\n          if (!Autosuggest.propTypes[key]) {\n            extraProps[key] = this.props[key];\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var noneSelected = !this.props.multiple || !this.state.selectedItems.length;\n      // set autoComplete off to avoid a redundant browser drop-down menu,\n      // but allow it to be overridden by extra props for auto-fill purposes\n      return _react2['default'].createElement('input', _extends({\n        autoComplete: 'off'\n      }, extraProps, {\n        className: (0, _classnames2['default'])(this.props.className, { 'form-control': !this.props.multiple }),\n        ref: 'input',\n        key: 'input',\n        id: controlId,\n        disabled: this.props.disabled,\n        required: this.props.required && noneSelected,\n        placeholder: noneSelected ? this.props.placeholder : undefined,\n        type: this.props.type,\n        value: this.state.inputValue,\n        onChange: this._handleInputChange,\n        onKeyDown: this._handleKeyDown,\n        onKeyPress: this._handleKeyPress,\n        onFocus: this._handleInputFocus,\n        onBlur: this._handleInputBlur }));\n    }\n  }, {\n    key: '_renderMenu',\n    value: function _renderMenu() {\n      var _this3 = this;\n\n      this._pseudofocusedItem = null;\n      var open = this.state.open;\n\n      if (!open) {\n        return null;\n      }\n      var datalist = this.props.datalist;\n\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n      this._foldedInputValue = foldedValue;\n      var items = void 0;\n      if (this.state.disableFilter) {\n        items = this._listAdapter.toArray(datalist);\n      } else {\n        items = this._listAdapter.filter(datalist, function (item) {\n          return _this3._itemAdapter.itemIncludedByInput(item, foldedValue) && _this3._allowItem(item);\n        });\n      }\n      items = this._itemAdapter.sortItems(items, foldedValue);\n      var filtered = items.length < this._listAdapter.getLength(datalist);\n      // visually indicate that first item will be selected if Enter is pressed\n      // while the input element is focused (unless multiple and not datalist-only)\n      var focusedIndex = void 0;\n      if (items.length > 0 && this.state.inputFocused && (!this.props.multiple || this.props.datalistOnly)) {\n        this._pseudofocusedItem = items[focusedIndex = 0];\n      }\n      var _props = this.props,\n          _props$suggestionsCla = _props.suggestionsClass,\n          SuggestionsClass = _props$suggestionsCla === undefined ? _Suggestions2['default'] : _props$suggestionsCla,\n          datalistMessage = _props.datalistMessage,\n          onDatalistMessageSelect = _props.onDatalistMessageSelect,\n          toggleId = _props.toggleId;\n\n      return _react2['default'].createElement(SuggestionsClass, { ref: 'suggestions',\n        datalistMessage: datalistMessage,\n        filtered: filtered,\n        focusedIndex: focusedIndex,\n        getItemKey: this._getItemKey,\n        isSelectedItem: this._isSelectedItem,\n        items: items,\n        labelledBy: toggleId,\n        onClose: this._handleMenuClose,\n        onDatalistMessageSelect: onDatalistMessageSelect,\n        onDisableFilter: this._handleShowAll,\n        onSelect: this._handleItemSelect,\n        open: open,\n        renderItem: this._renderSuggested });\n    }\n  }, {\n    key: '_allowItem',\n    value: function _allowItem(item) {\n      var _this4 = this;\n\n      if (this.props.allowDuplicates) {\n        return true;\n      }\n      var value = this._itemAdapter.getInputValue(item);\n      return !this.state.selectedItems.find(function (i) {\n        return _this4._itemAdapter.getInputValue(i) === value;\n      });\n    }\n\n    // autobind\n\n  }, {\n    key: '_getItemKey',\n    value: function _getItemKey(item) {\n      return this._itemAdapter.getReactKey(item);\n    }\n\n    // autobind\n\n  }, {\n    key: '_isSelectedItem',\n    value: function _isSelectedItem(item) {\n      return this._itemAdapter.itemMatchesInput(item, this._foldedInputValue);\n    }\n\n    // autobind\n\n  }, {\n    key: '_renderSuggested',\n    value: function _renderSuggested(item) {\n      return this._itemAdapter.renderSuggested(item);\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleToggleClick',\n    value: function _handleToggleClick() {\n      this._toggleOpen('click', this.props);\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleInputChange',\n    value: function _handleInputChange(event) {\n      var _this5 = this;\n\n      var _ref2 = event.target,\n          value = _ref2.value;\n      // prevent auto-complete on backspace/delete/copy/paste/etc.\n\n      var allowAutoComplete = this._keyPressCount > this.state.inputValueKeyPress;\n      if (allowAutoComplete && value) {\n        if (this._autoCompleteAfterRender) {\n          this._setValueMeta();\n          this._setInputValue(value, function () {\n            _this5._checkAutoComplete(value, _this5.props);\n          });\n        } else if (!this._checkAutoComplete(value, this.props)) {\n          this._setValueMeta();\n          this._setInputValue(value);\n        }\n      } else {\n        this._setValueMeta();\n        this._setInputValue(value);\n      }\n\n      // suppress onSearch if can't auto-complete and not open\n      if (allowAutoComplete || this.state.open) {\n        var _onSearch = this.props.onSearch;\n\n        if (_onSearch) {\n          clearTimeout(this._searchTimeoutId);\n          this._searchTimeoutId = setTimeout(function () {\n            _this5._searchTimeoutId = null;\n            if (value != _this5.state.searchValue) {\n              _this5.setState({ searchValue: value });\n              _onSearch(value);\n            }\n          }, this.props.searchDebounce);\n        }\n      }\n    }\n  }, {\n    key: '_checkAutoComplete',\n    value: function _checkAutoComplete(value, props) {\n      var _this6 = this;\n\n      // open dropdown if any items would be included\n      var valueUpdated = false;\n      var datalist = props.datalist;\n\n      var foldedValue = this._itemAdapter.foldValue(value);\n      var includedItems = this._listAdapter.filter(datalist, function (i) {\n        return _this6._itemAdapter.itemIncludedByInput(i, foldedValue) && _this6._allowItem(i);\n      });\n      if (includedItems.length > 0) {\n        // if only one item is included and the value must come from the list,\n        // autocomplete using that item\n        var _datalistOnly = props.datalistOnly,\n            _datalistPartial = props.datalistPartial;\n\n        if (includedItems.length === 1 && _datalistOnly && !_datalistPartial) {\n          var found = includedItems[0];\n          var foundValue = this._itemAdapter.getInputValue(found);\n          var callback = void 0;\n          var _inputSelect = props.inputSelect;\n\n          if (value != foundValue && _inputSelect && this._itemAdapter.foldValue(foundValue).startsWith(foldedValue)) {\n            var _input = this.refs.input;\n            callback = function callback() {\n              _inputSelect(_input, value, foundValue);\n            };\n          }\n          this._setValueMeta(found);\n          this._setInputValue(foundValue, callback);\n          valueUpdated = true;\n          if (this.state.open ? props.closeOnCompletion : value != foundValue && !props.closeOnCompletion) {\n            this._toggleOpen('autocomplete', props);\n          }\n        } else {\n          // otherwise, just check if any values match, and select the first one\n          // (without modifying the input value)\n          var _found = includedItems.find(function (i) {\n            return _this6._itemAdapter.itemMatchesInput(i, foldedValue);\n          });\n          if (_found) {\n            this._setValueMeta(_found);\n            this._setInputValue(value);\n            valueUpdated = true;\n          }\n          // open dropdown unless exactly one matching value was found\n          if (!this.state.open && (!_found || includedItems.length > 1)) {\n            this._open('autocomplete', props);\n          }\n        }\n      }\n      return valueUpdated;\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleItemSelect',\n    value: function _handleItemSelect(item) {\n      if (this.props.multiple) {\n        this._addItem(item);\n      } else {\n        var itemValue = this._itemAdapter.getInputValue(item);\n        this._setValueMeta(item);\n        this._setInputValue(itemValue);\n      }\n      this._close();\n    }\n  }, {\n    key: '_addItem',\n    value: function _addItem(item) {\n      if (this._allowItem(item)) {\n        var _selectedItems3 = [].concat(_toConsumableArray(this.state.selectedItems), [item]);\n        this.setState({ selectedItems: _selectedItems3 });\n        var _props2 = this.props,\n            _onAdd = _props2.onAdd,\n            _onChange2 = _props2.onChange;\n\n        if (_onAdd) {\n          _onAdd(item);\n        }\n        if (_onChange2) {\n          _onChange2(_selectedItems3);\n        }\n      }\n      this._clearInput();\n      if (this.state.open) {\n        this._close();\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_removeItem',\n    value: function _removeItem(index) {\n      var previousItems = this.state.selectedItems;\n      var selectedItems = previousItems.slice(0, index).concat(previousItems.slice(index + 1));\n      this.setState({ selectedItems: selectedItems });\n      var _props3 = this.props,\n          onRemove = _props3.onRemove,\n          onChange = _props3.onChange;\n\n      if (onRemove) {\n        onRemove(index);\n      }\n      if (onChange) {\n        onChange(selectedItems);\n      }\n    }\n  }, {\n    key: '_addInputValue',\n    value: function _addInputValue() {\n      if (this._inputItem) {\n        this._addItem(this._inputItem);\n        return true;\n      }\n      return false;\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleShowAll',\n    value: function _handleShowAll() {\n      this.setState({ disableFilter: true });\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleKeyDown',\n    value: function _handleKeyDown(event) {\n      if (this.props.disabled) return;\n\n      switch (event.keyCode || event.which) {\n        case _keycode2['default'].codes.down:\n        case _keycode2['default'].codes['page down']:\n          if (this.state.open) {\n            this.refs.suggestions.focusFirst();\n          } else if (this._canOpen()) {\n            this._open('keydown', this.props);\n          }\n          event.preventDefault();\n          break;\n        case _keycode2['default'].codes.left:\n        case _keycode2['default'].codes.backspace:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === 0) {\n            this.refs.choices.focusLast();\n            event.preventDefault();\n          }\n          break;\n        case _keycode2['default'].codes.right:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === this.state.inputValue.length) {\n            this.refs.choices.focusFirst();\n            event.preventDefault();\n          }\n          break;\n        case _keycode2['default'].codes.enter:\n          if (this.props.multiple && this.state.inputValue) {\n            event.preventDefault();\n            if (this._addInputValue()) {\n              break;\n            }\n          }\n          if (this.state.open && this.state.inputFocused) {\n            event.preventDefault();\n            if (this._pseudofocusedItem) {\n              this._handleItemSelect(this._pseudofocusedItem);\n            } else {\n              this._close();\n            }\n          }\n          break;\n        case _keycode2['default'].codes.esc:\n        case _keycode2['default'].codes.tab:\n          this._handleMenuClose(event);\n          break;\n      }\n    }\n  }, {\n    key: '_getCursorPosition',\n    value: function _getCursorPosition(input) {\n      var inputNode = _reactDom2['default'].findDOMNode(input);\n      // istanbul ignore else\n      if (inputNode instanceof HTMLInputElement) {\n        return inputNode.selectionStart;\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleKeyPress',\n    value: function _handleKeyPress() {\n      ++this._keyPressCount;\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleMenuClose',\n    value: function _handleMenuClose() {\n      if (this.state.open) {\n        this._close();\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleInputFocus',\n    value: function _handleInputFocus() {\n      this.setState({ inputFocused: true });\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleInputBlur',\n    value: function _handleInputBlur() {\n      this.setState({ inputFocused: false });\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleFocus',\n    value: function _handleFocus() {\n      if (this._focusTimeoutId) {\n        clearTimeout(this._focusTimeoutId);\n        this._focusTimeoutId = null;\n      } else {\n        this._focused = true;\n        var _onFocus = this.props.onFocus;\n\n        if (_onFocus) {\n          var _value3 = this._getCurrentValue();\n          _onFocus(_value3);\n        }\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleBlur',\n    value: function _handleBlur() {\n      var _this7 = this;\n\n      this._focusTimeoutId = setTimeout(function () {\n        _this7._focusTimeoutId = null;\n        _this7._focused = false;\n        var inputValue = _this7.state.inputValue;\n        var onBlur = _this7.props.onBlur;\n\n        if (_this7.props.multiple) {\n          if (inputValue && !_this7._addInputValue()) {\n            _this7._clearInput();\n          }\n        } else if (inputValue != _this7._lastValidValue) {\n          // invoke onBlur after state change, rather than immediately\n          var callback = void 0;\n          if (onBlur) {\n            callback = function callback() {\n              var value = _this7._getCurrentValue();\n              onBlur(value);\n            };\n          }\n          // restore last valid value/item\n          _this7._setValueMeta(_this7._lastValidItem, false, true, true);\n          _this7._setInputValue(_this7._lastValidValue, callback);\n          return;\n        }\n        if (onBlur) {\n          var _value4 = _this7._getCurrentValue();\n          onBlur(_value4);\n        }\n      }, 1);\n    }\n  }]);\n\n  return Autosuggest;\n}(_react2['default'].Component);\n\nAutosuggest.propTypes = {\n  /**\n   * Text or component appearing in the input group after the input element\n   * (and before any button specified in `buttonAfter`).\n   */\n  addonAfter: _propTypes2['default'].node,\n  /**\n    * Text or component appearing in the input group before the input element\n    * (and before any button specified in `buttonBefore`).\n    */\n  addonBefore: _propTypes2['default'].node,\n  /**\n   * Indicates whether duplicate values are allowed in `multiple` mode.\n   */\n  allowDuplicates: _propTypes2['default'].bool,\n  /**\n   * Specifies the size of the form group and its contained components.\n   * Leave undefined for normal/medium size.\n   */\n  bsSize: _propTypes2['default'].oneOf(['small', 'large']),\n  /**\n   * Button component appearing in the input group after the input element\n   * (and after any add-on specified in `addonAfter`).\n   */\n  buttonAfter: _propTypes2['default'].node,\n  /**\n   * Button component appearing in the input group before the input element\n   * (and after any add-on specified in `addonBefore`).\n   */\n  buttonBefore: _propTypes2['default'].node,\n  /**\n   * React component class used to render the selected items in multiple mode.\n   */\n  choicesClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n  /**\n   * Indicates whether the drop-down menu should be closed automatically when\n   * auto-completion occurs. By default, the menu will remain open, so the\n   * user can see any additional information about the selected item (such as\n   * a shorthand code that caused it to be selected).\n   */\n  closeOnCompletion: _propTypes2['default'].bool,\n  /**\n   * A collection of items (such as an array, object, or Map) used as\n   * auto-complete suggestions. Each item may have any type supported by the\n   * `itemAdapter`. The default item adapter has basic support for any\n   * non-null type: it will initially try to access item properties using the\n   * configured property names (`itemReactKeyPropName`, `itemSortKeyPropName`,\n   * and `itemValuePropName`), but will fall back to using the `toString`\n   * method to obtain these properties to support primitives and other object\n   * types.\n   *\n   * If `datalist` is undefined or null and `onSearch` is not, the datalist\n   * is assumed to be dynamically populated, and the drop-down toggle will be\n   * enabled and will trigger `onSearch` the first time it is clicked.\n   * Conversely, an empty `datalist` or undefined/null `onSearch` indicates\n   * that there are no auto-complete options.\n   */\n  datalist: _propTypes2['default'].any,\n  /**\n   * An instance of the ListAdapter class that provides datalist access\n   * methods required by this component.\n   */\n  datalistAdapter: _propTypes2['default'].object,\n  /**\n   * Message to be displayed at the end of the datalist. It can be used to\n   * indicate that data is being fetched asynchronously, that an error\n   * occurred fetching data, or that additional options can be requested.\n   * It behaves similarly to a menu item, except that it is not filtered or\n   * sorted and cannot be selected (except to invoke `onDatalistMessageSelect`).\n   * Changing this property to a different non-null value while the component\n   * is focused causes the drop-down menu to be opened, which is useful for\n   * reporting status, such as that options are being fetched or failed to be\n   * fetched.\n   */\n  datalistMessage: _propTypes2['default'].node,\n  /**\n   * Indicates that only values matching an item from the `datalist` property\n   * are considered valid. For search purposes, intermediate values of the\n   * underlying `input` element may not match while the component is focused,\n   * but any non-matching value will be replaced with the previous matching\n   * value when the component loses focus.\n   *\n   * Note that there are two cases where the current (valid) value may not\n   * correspond to an item in the datalist:\n   *\n   * - If the value was provided by the `value` or `defaultValue` property\n   *   and either `datalist` is undefined/null (as opposed to empty) or\n   *   `datalistPartial` is true, the value is assumed to be valid.\n   * - If `datalist` changes and `datalistPartial` is true, any previously\n   *   valid value is assumed to remain valid. (Conversely, if `datalist`\n   *   changes and `datalistPartial` is false, a previously valid value will\n   *   be invalidated if not in the new `datalist`.)\n   */\n  datalistOnly: _propTypes2['default'].bool,\n  /**\n   * Indicates that the `datalist` property should be considered incomplete\n   * for validation purposes. Specifically, if both `datalistPartial` and\n   * `datalistOnly` are true, changes to the `datalist` will not render\n   * invalid a value that was previously valid. This is useful in cases where\n   * a partial datalist is obtained dynamically in response to the `onSearch`\n   * callback.\n   */\n  datalistPartial: _propTypes2['default'].bool,\n  /**\n   * Initial value to be rendered when used as an\n   * [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)\n   * (i.e. no `value` property is supplied).\n   */\n  defaultValue: _propTypes2['default'].any,\n  /**\n   * Indicates whether the form group is disabled, which causes all of its\n   * contained elements to ignore input and focus events and to be displayed\n   * grayed out.\n   */\n  disabled: _propTypes2['default'].bool,\n  /**\n   * Indicates whether the suggestion list should drop up instead of down.\n   *\n   * Note that currently a drop-up list extending past the top of the page is\n   * clipped, rendering the clipped items inaccessible, whereas a drop-down\n   * list will extend the page and allow scrolling as necessary.\n   */\n  dropup: _propTypes2['default'].bool,\n  /**\n   * Custom class name applied to the input group.\n   */\n  groupClassName: _propTypes2['default'].string,\n  /**\n   * Function used to select a portion of the input value when auto-completion\n   * occurs. The default implementation selects just the auto-completed\n   * portion, which is equivalent to:\n   *\n   * ```js\n   *   defaultInputSelect(input, value, completion) {\n   *     input.setSelectionRange(value.length, completion.length)\n   *   }\n   * ```\n   */\n  inputSelect: _propTypes2['default'].func,\n  /**\n   * An instance of the ItemAdapter class that provides the item access\n   * methods required by this component.\n   */\n  itemAdapter: _propTypes2['default'].object,\n  /**\n   * Name of the item property used for the React component key. If this\n   * property is not defined, `itemValuePropName` is used instead. If neither\n   * property is defined, `toString()` is called on the item.\n   */\n  itemReactKeyPropName: _propTypes2['default'].string,\n  /**\n   * Name of the item property used for sorting items. If this property is not\n   * defined, `itemValuePropName` is used instead. If neither property is\n   * defined, `toString()` is called on the item.\n   */\n  itemSortKeyPropName: _propTypes2['default'].string,\n  /**\n   * Name of item property used for the input element value. If this property\n   * is not defined, `toString()` is called on the item.\n   */\n  itemValuePropName: _propTypes2['default'].string,\n  /**\n   * Enables selection of multiple items. The value property should be an\n   * array of items.\n   */\n  multiple: _propTypes2['default'].bool,\n  /**\n   * Callback function called whenever a new value should be appended to the\n   * array of values in `multiple` mode. The sole argument is the added item.\n   */\n  onAdd: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input focus leaves this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onBlur: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input value changes to a different\n   * valid value. Validity depends on properties such as `datalistOnly`,\n   * `valueIsItem`, and `required`. The sole argument is current value:\n   *\n   * - If `multiple` is enabled, the current value is an array of selected\n   *   items.\n   * - If `valueIsItem` is enabled, the current value is the selected\n   *   datalist item.\n   * - Otherwise, the current value is the `input` element value. Note that\n   *   if `datalistOnly` or `required` are enabled, only valid values trigger\n   *   a callback.\n   */\n  onChange: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the datalist item created for\n   * `datalistMessage` is selected. If this property is null, the associated\n   * item is displayed as disabled.\n   */\n  onDatalistMessageSelect: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input focus enters this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onFocus: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever a value should be removed from the\n   * array of values in `multiple` mode. The sole argument is the index of\n   * the value to remove.\n   */\n  onRemove: _propTypes2['default'].func,\n  /**\n   * Callback function called periodically when the `input` element value has\n   * changed. The sole argument is the current value of the `input` element.\n   * This callback can be used to dynamically populate the `datalist` based on\n   * the input value so far, e.g. with values obtained from a remote service.\n   * Once changed, the value must then remain unchanged for `searchDebounce`\n   * milliseconds before the function will be called. No two consecutive\n   * invocations of the function will be passed the same value (i.e. changing\n   * and then restoring the value within the debounce interval is not\n   * considered a change). Note also that the callback can be invoked with an\n   * empty string, if the user clears the `input` element; this implies that\n   * any minimum search string length should be imposed by the function.\n   */\n  onSearch: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever an item from the suggestion list is\n   * selected (regardless of whether it is clicked or typed). The sole\n   * argument is the selected item.\n   */\n  onSelect: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the drop-down list of suggestions is\n   * opened or closed. The sole argument is a boolean value indicating whether\n   * the list is open.\n   */\n  onToggle: _propTypes2['default'].func,\n  /**\n   * Placeholder text propagated to the underlying `input` element (when\n   * `multiple` is false or no items have been selected).\n   */\n  placeholder: _propTypes2['default'].string,\n  /**\n   * `required` property passed to the `input` element (when `multiple` is\n   * false or no items have been selected).\n   */\n  required: _propTypes2['default'].bool,\n  /**\n   * The number of milliseconds that must elapse between the last change to\n   * the `input` element value and a call to `onSearch`. The default is 250.\n   */\n  searchDebounce: _propTypes2['default'].number,\n  /**\n   * Indicates whether to show the drop-down toggle. If set to `auto`, the\n   * toggle is shown only when the `datalist` is non-empty or dynamic.\n   */\n  showToggle: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].oneOf(['auto'])]),\n  /**\n   * React component class used to render the drop-down list of suggestions.\n   */\n  suggestionsClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n  /**\n   * ID supplied to the drop-down toggle and used by the drop-down menu to\n   * refer to it.\n   */\n  toggleId: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n  /**\n   * `type` property supplied to the contained `input` element. Only textual\n   * types should be specified, such as `text`, `search`, `email`, `tel`, or\n   * perhaps `number`. Note that the browser may supply additional UI elements\n   * for some types (e.g. increment/decrement buttons for `number`) that may\n   * need additional styling or may interfere with UI elements supplied by\n   * this component.\n   */\n  type: _propTypes2['default'].string,\n  /**\n   * The value to be rendered by the component. If unspecified, the component\n   * behaves like an [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components).\n   */\n  value: _propTypes2['default'].any,\n  /**\n   * Indicates that the `value` property should be interpreted as a datalist\n   * item, as opposed to the string value of the underlying `input` element.\n   * When false (the default), the `value` property (if specified) is\n   * expected to be a string and corresponds (indirectly) to the `value`\n   * property of the underlying `input` element. When true, the `value`\n   * property is expected to be a datalist item whose display value (as\n   * provided by the `itemAdapter`) is used as the `input` element value.\n   * This property also determines whether the argument to the `onChange`\n   * callback is the `input` value or a datalist item.\n   *\n   * Note that unless `datalistOnly` is also true, items may also be created\n   * dynamically using the `newFromValue` method of the `itemAdapter`.\n   *\n   * Also note that this property is ignored if `multiple` is true; in that\n   * case, the `value` property and `onChange` callback argument are\n   * implicitly an array of datalist items.\n   */\n  valueIsItem: _propTypes2['default'].bool\n};\nAutosuggest.contextTypes = {\n  $bs_formGroup: _propTypes2['default'].object\n};\nAutosuggest.defaultProps = {\n  closeOnCompletion: false,\n  datalistOnly: false,\n  datalistPartial: false,\n  disabled: false,\n  dropup: false,\n  inputSelect: Autosuggest.defaultInputSelect,\n  multiple: false,\n  itemReactKeyPropName: 'key',\n  itemSortKeyPropName: 'sortKey',\n  itemValuePropName: 'value',\n  searchDebounce: 250,\n  showToggle: 'auto',\n  type: 'text',\n  valueIsItem: false\n};\nexports['default'] = Autosuggest;"]},"metadata":{},"sourceType":"script"}