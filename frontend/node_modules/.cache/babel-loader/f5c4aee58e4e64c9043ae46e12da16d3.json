{"ast":null,"code":"\"use strict\";\n\nvar root_1 = require('../util/root');\n\nfunction symbolIteratorPonyfill(root) {\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    var Set_1 = root.Set;\n\n    if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n\n    var Map_1 = root.Map; // required for compatability with es6-shim\n\n    if (Map_1) {\n      var keys = Object.getOwnPropertyNames(Map_1.prototype);\n\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i]; // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n\n        if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n\n    return '@@iterator';\n  }\n}\n\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\n\nexports.$$iterator = exports.iterator;","map":{"version":3,"sources":["../../src/symbol/iterator.ts"],"names":[],"mappings":";;AAAA,IAAA,MAAA,GAAA,OAAA,CAAqB,cAArB,CAAA;;AAEA,SAAA,sBAAA,CAAuC,IAAvC,EAAgD;AAC9C,MAAM,MAAM,GAAQ,IAAI,CAAC,MAAzB;;AAEA,MAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,QAAI,CAAC,MAAM,CAAC,QAAZ,EAAsB;AACpB,MAAA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,mBAAD,CAAxB;AACD;;AACD,WAAO,MAAM,CAAC,QAAd;AACD,GALD,MAKO;AACL;AACQ,QAAA,KAAA,GAAA,IAAA,CAAA,GAAA;;AACR,QAAI,KAAG,IAAI,OAAO,IAAI,KAAJ,GAAU,YAAV,CAAP,KAAmC,UAA9C,EAA0D;AACxD,aAAO,YAAP;AACD;;AACO,QAAA,KAAA,GAAA,IAAA,CAAA,GAAA,CANH,CAOL;;AACA,QAAI,KAAJ,EAAS;AACP,UAAI,IAAI,GAAG,MAAM,CAAC,mBAAP,CAA2B,KAAG,CAAC,SAA/B,CAAX;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACpC,YAAI,GAAG,GAAG,IAAI,CAAC,CAAD,CAAd,CADoC,CAEpC;;AACA,YAAI,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,MAA7B,IAAuC,KAAG,CAAC,SAAJ,CAAc,GAAd,MAAuB,KAAG,CAAC,SAAJ,CAAc,SAAd,CAAlE,EAA4F;AAC1F,iBAAO,GAAP;AACD;AACF;AACF;;AACD,WAAO,YAAP;AACD;AACF;;AA5Be,OAAA,CAAA,sBAAA,GAAsB,sBAAtB;AA8BH,OAAA,CAAA,QAAA,GAAW,sBAAsB,CAAC,MAAA,CAAA,IAAD,CAAjC;AAEb;;AAEG;;AACU,OAAA,CAAA,UAAA,GAAa,OAAA,CAAA,QAAb","sourcesContent":["import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}