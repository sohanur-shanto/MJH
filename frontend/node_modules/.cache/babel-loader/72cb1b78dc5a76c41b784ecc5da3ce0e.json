{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n  }\n\n  return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PrintProvider from './PrintProvider';\nimport { debug } from './common';\nvar s = {\n  _exclusive: 'easy-print-Print-_exclusive-3Eag',\n  root: 'easy-print-Print-root-2BcA',\n  _main: 'easy-print-Print-_main-LssU'\n};\n\nrequire('load-styles')('/*  imported from Print.css  */\\n\\n.easy-print-Print-_exclusive-3Eag {\\n  display: none;\\n}\\n\\n@media print {\\n  .easy-print-Print-root-2BcA {\\n    visibility: visible; /* visible element even nested in the hidden one */\\n  }\\n  .easy-print-Print-root-2BcA.easy-print-Print-_main-LssU {\\n    visibility: visible;\\n  }\\n  .easy-print-Print-_exclusive-3Eag {\\n    display: block;\\n  }\\n}\\n');\n\nvar propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  main: PropTypes.bool,\n  single: PropTypes.bool,\n  exclusive: PropTypes.bool,\n  printOnly: PropTypes.bool\n};\nvar contextTypes = PrintProvider.childContextTypes;\n\nvar Print = function (_React$Component) {\n  _inherits(Print, _React$Component);\n\n  function Print(props) {\n    _classCallCheck(this, Print);\n\n    var _this = _possibleConstructorReturn(this, (Print.__proto__ || Object.getPrototypeOf(Print)).call(this, props));\n\n    _this.state = {\n      printOffsetLeft: 0,\n      printOffsetTop: 0\n    };\n    return _this;\n  }\n\n  _createClass(Print, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.name) {\n        debug('init printable', this.props.name);\n        var isSingle = this.props.main || this.props.single;\n        this.context.printProvider && this.context.printProvider.regPrintable(this.props.name, React.createElement(Print, this.props), isSingle);\n      }\n\n      if (this.props.main || this.props.single) {\n        window.matchMedia('print').onchange = function () {\n          var isPrint = window.matchMedia('print').matches;\n\n          if (isPrint) {\n            var bodyRect = document.body.getBoundingClientRect();\n            var elem = _this2.printElement;\n            var elemRect = elem && elem.getBoundingClientRect();\n            var printOffsetLeft = elemRect && elemRect.left - bodyRect.left;\n            var printOffsetTop = elemRect && elemRect.top - bodyRect.top;\n\n            _this2.setState({\n              printOffsetTop: printOffsetTop,\n              printOffsetLeft: printOffsetLeft\n            });\n          } else {\n            _this2.setState({\n              printOffsetTop: 0,\n              printOffsetLeft: 0\n            });\n          }\n        };\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.name) {\n        debug('remove printable', this.props.name);\n        var isSingle = this.props.main || this.props.single;\n        this.context.printProvider && this.context.printProvider.unregPrintable(this.props.name, isSingle);\n      }\n\n      if (this.props.main || this.props.single) {\n        window.matchMedia('print').onchange = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          main = _props.main,\n          single = _props.single,\n          exclusive = _props.exclusive,\n          printOnly = _props.printOnly;\n      var _state = this.state,\n          printOffsetLeft = _state.printOffsetLeft,\n          printOffsetTop = _state.printOffsetTop;\n      var main_ = main || single ? s._main : '';\n      var excl_ = exclusive || printOnly ? s._exclusive : '';\n      var isPrint = window.matchMedia('print').matches;\n      var offset_ = (printOffsetTop || printOffsetLeft) && main_ && isPrint ? {\n        marginTop: -printOffsetTop,\n        marginLeft: -printOffsetLeft\n      } : {};\n      var globalClassName = 'react-easy-print-print'; // using in hiddenAll\n\n      var className = globalClassName + ' ' + s.root + ' ' + main_ + ' ' + excl_;\n      return React.createElement('div', {\n        ref: function ref(el) {\n          return _this3.printElement = el;\n        },\n        style: offset_,\n        className: className\n      }, children);\n    }\n  }]);\n\n  return Print;\n}(React.Component);\n\nexport default Print;\nPrint.contextTypes = contextTypes;","map":{"version":3,"sources":["../../src/Print.jsx"],"names":["propTypes","name","PropTypes","children","main","single","exclusive","printOnly","contextTypes","PrintProvider","Print","React","Component","printOffsetLeft","printOffsetTop","debug","isSingle","window","isPrint","bodyRect","document","elem","elemRect","main_","s","excl_","offset_","marginTop","marginLeft","globalClassName","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PrintProvider from './PrintProvider';\nimport { debug } from './common';\nimport s from './Print.css';\n\nconst propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  main: PropTypes.bool,\n  single: PropTypes.bool,\n  exclusive: PropTypes.bool,\n  printOnly: PropTypes.bool\n};\nconst contextTypes = PrintProvider.childContextTypes;\n\nexport default class Print extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      printOffsetLeft: 0,\n      printOffsetTop: 0\n    };\n  }\n  componentDidMount() {\n\n    if (this.props.name) {\n      debug('init printable', this.props.name);\n      const isSingle = (this.props.main || this.props.single);\n      this.context.printProvider && this.context.printProvider.regPrintable(this.props.name, <Print {...this.props} />, isSingle);\n    }\n\n    if (this.props.main || this.props.single) {\n\n      window.matchMedia('print').onchange = () => {\n        const isPrint = window.matchMedia('print').matches;\n\n        if(isPrint){\n          const bodyRect = document.body.getBoundingClientRect();\n          const elem = this.printElement;\n          const elemRect = elem && elem.getBoundingClientRect();\n          const printOffsetLeft = elemRect && (elemRect.left - bodyRect.left);\n          const printOffsetTop = elemRect && (elemRect.top - bodyRect.top);\n\n          this.setState({\n            printOffsetTop,\n            printOffsetLeft,\n          });\n        }else{\n          this.setState({\n            printOffsetTop: 0,\n            printOffsetLeft: 0\n          })\n        }\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.name) {\n      debug('remove printable', this.props.name);\n      const isSingle = (this.props.main || this.props.single);\n      this.context.printProvider && this.context.printProvider.unregPrintable(this.props.name, isSingle);\n    }\n\n    if (this.props.main || this.props.single) {\n      window.matchMedia('print').onchange = null;\n    }\n  }\n\n  render() {\n\n    const { children, main, single, exclusive, printOnly } = this.props;\n    const { printOffsetLeft, printOffsetTop } = this.state;\n    const main_ = (main || single) ? s._main : '';\n    const excl_ = (exclusive || printOnly) ? s._exclusive : '';\n    const isPrint = window.matchMedia('print').matches;\n    const offset_ = ((printOffsetTop || printOffsetLeft ) && main_ && isPrint) ? { marginTop: -printOffsetTop, marginLeft: -printOffsetLeft} : {};\n    const globalClassName = 'react-easy-print-print'; // using in hiddenAll\n    const className = `${globalClassName} ${s.root} ${main_} ${excl_}`;\n    return <div ref={ (el) => this.printElement = el } style={offset_} className={className}>{children}</div>;\n  }\n}\nPrint.propTypes = propTypes;\nPrint.contextTypes = contextTypes;\n"]},"metadata":{},"sourceType":"module"}