{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\n\n\nvar UnsubscriptionError = function (_super) {\n  __extends(UnsubscriptionError, _super);\n\n  function UnsubscriptionError(errors) {\n    _super.call(this);\n\n    this.errors = errors;\n    var err = Error.call(this, errors ? errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) {\n      return i + 1 + \") \" + err.toString();\n    }).join('\\n  ') : '');\n    this.name = err.name = 'UnsubscriptionError';\n    this.stack = err.stack;\n    this.message = err.message;\n  }\n\n  return UnsubscriptionError;\n}(Error);\n\nexports.UnsubscriptionError = UnsubscriptionError;","map":{"version":3,"sources":["../../src/util/UnsubscriptionError.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;AAGG;;;AACH,IAAA,mBAAA,GAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AACvC,WAAA,mBAAA,CAAmB,MAAnB,EAAgC;AAC9B,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA;;AADiB,SAAA,MAAA,GAAA,MAAA;AAEjB,QAAM,GAAG,GAAQ,KAAK,CAAC,IAAN,CAAW,IAAX,EAAiB,MAAM,GACnC,MAAM,CAAC,MAAP,GAAa,6CAAb,GACL,MAAM,CAAC,GAAP,CAAW,UAAC,GAAD,EAAM,CAAN,EAAO;AAAK,aAAG,CAAC,GAAG,CAAP,GAAQ,IAAR,GAAa,GAAG,CAAhB,QAAa,EAAb;AAA6B,KAApD,EAAsD,IAAtD,CAA2D,MAA3D,CAFwC,GAE+B,EAFtD,CAAjB;AAGO,SAAM,IAAN,GAAa,GAAG,CAAC,IAAJ,GAAW,qBAAxB;AACA,SAAM,KAAN,GAAc,GAAG,CAAC,KAAlB;AACA,SAAM,OAAN,GAAgB,GAAG,CAAC,OAApB;AACR;;AACH,SAAA,mBAAA;AAAC,CAVD,CAAyC,KAAzC,CAAA;;AAAa,OAAA,CAAA,mBAAA,GAAmB,mBAAnB","sourcesContent":["/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}