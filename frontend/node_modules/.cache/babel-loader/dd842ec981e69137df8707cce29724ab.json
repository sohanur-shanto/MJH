{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["E:/Laksura_Project/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","CART_CLEAR_ITEMS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,QAG8B,6BAH9B;AAKA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAG;AACAD,IAAAA,QAAQ,CAAC;AACJE,MAAAA,IAAI,EAAET;AADF,KAAD,CAAR;AAKC,UAAM;AACFU,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAEFH,QAAQ,EAFZ;AAMD,UAAMI,MAAM,GAAG;AACVC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADC,KAAf;AAQA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMZ,KAAK,CAACa,IAAN,CACf,kBADe,EAEhBX,KAFgB,EAGhBM,MAHgB,CAArB;AAMAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,oBADD;AAELiB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AACJE,MAAAA,IAAI,EAAEN,gBADF;AAEJe,MAAAA,OAAO,EAAEF;AAFL,KAAD,CAAR;AAKCG,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAIH,GAxCD,CAwCE,OAAMC,KAAN,EAAY;AACXd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP,iBADD;AAELgB,MAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MAAtC,GACPF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MADb,GAEPF,KAAK,CAACG;AAJH,KAAD,CAAR;AAMF;AACJ,CAjDM","sourcesContent":["import { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL, } from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n       dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        }) \r\n\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        \r\n\r\n       const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n       const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n           )\r\n           \r\n       dispatch({\r\n           type: ORDER_CREATE_SUCCESS,\r\n           payload: data\r\n       })\r\n\r\n       dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n\r\n    } catch(error){\r\n       dispatch({\r\n           type: ORDER_CREATE_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n       })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}