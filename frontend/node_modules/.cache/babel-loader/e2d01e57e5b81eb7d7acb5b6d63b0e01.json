{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\laksura project\\\\Laksura_Project\\\\frontend\\\\src\\\\screens\\\\PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentScreen({\n  history\n}) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState('Bank Deposite, Fund Transfer (Online/Offline Payment)'); // const [customerType, setcustomerType] = useState('Regular', 'Police', 'RAB', 'DGIF', 'CID', 'NAVY', 'Air Force', 'Army', 'DB', 'Administration')\n\n  if (!shippingAddress.address) {\n    history.push('/shipping');\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod)); // dispatch(saveCustomerType(customerType))\n\n    history.push('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Offline Payment (Bank Deposite/Fund Transfer)\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentScreen, \"nLRwPYZ/rWOK1ywyfxLKrhQPtL4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/laksura project/Laksura_Project/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","useDispatch","useSelector","FormContainer","savePaymentMethod","CheckoutSteps","PaymentScreen","history","cart","state","shippingAddress","dispatch","paymentMethod","setPaymentMethod","address","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAIA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAAA;;AAEhC,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;AAEA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,uDAAD,CAAlD,CAPgC,CAShC;;AAEA,MAAI,CAACc,eAAe,CAACI,OAArB,EAA8B;AAC1BP,IAAAA,OAAO,CAACQ,IAAR,CAAa,WAAb;AACH;;AAED,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,QAAQ,CAACP,iBAAiB,CAACQ,aAAD,CAAlB,CAAR,CAFyB,CAGzB;;AACAL,IAAAA,OAAO,CAACQ,IAAR,CAAa,aAAb;AACH,GALD;;AAOA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,aAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,GAAD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAC,+CAFV;AAGI,YAAA,EAAE,EAAE,QAHR;AAII,YAAA,IAAI,EAAE,eAJV;AAKI,YAAA,OAAO,MALX;AAMI,YAAA,QAAQ,EAAGC,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AANrC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA0BI;AAAA;AAAA;AAAA;AAAA,cA1BJ,eA4BI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GA5DQd,a;UAEQJ,W,EAGID,W;;;KALZK,a;AA8DT,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Bank Deposite, Fund Transfer (Online/Offline Payment)')\r\n\r\n    // const [customerType, setcustomerType] = useState('Regular', 'Police', 'RAB', 'DGIF', 'CID', 'NAVY', 'Air Force', 'Army', 'DB', 'Administration')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        // dispatch(saveCustomerType(customerType))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <hr />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <br />\r\n                    <br />\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Offline Payment (Bank Deposite/Fund Transfer)'\r\n                            id= 'paypal'\r\n                            name= 'paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                        <br />\r\n\r\n                    \r\n                        \r\n                    </Col>\r\n                </Form.Group>\r\n\r\n               \r\n                <br />\r\n               \r\n                <Button type='submit'>\r\n                <strong> Continue</strong>\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}